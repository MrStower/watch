
watch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000160c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000076  00800060  0000160c  000016c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000fe  008000d6  008000d6  00001736  2**0
                  ALLOC
  3 .eeprom       00000058  00810000  00810000  00001736  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  0000178e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017c0  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000001c8  00000000  00000000  00001800  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002a53  00000000  00000000  000019c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000008a5  00000000  00000000  0000441b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001690  00000000  00000000  00004cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000690  00000000  00000000  00006350  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007d5  00000000  00000000  000069e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001dea  00000000  00000000  000071b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001e8  00000000  00000000  00008f9f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
      12:	e1 c9       	rjmp	.-3134   	; 0xfffff3d6 <__eeprom_end+0xff7ef37e>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	62 ca       	rjmp	.-2876   	; 0xfffff4dc <__eeprom_end+0xff7ef484>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	10 e0       	ldi	r17, 0x00	; 0
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	ec e0       	ldi	r30, 0x0C	; 12
      3a:	f6 e1       	ldi	r31, 0x16	; 22
      3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0
      42:	a6 3d       	cpi	r26, 0xD6	; 214
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
      48:	21 e0       	ldi	r18, 0x01	; 1
      4a:	a6 ed       	ldi	r26, 0xD6	; 214
      4c:	b0 e0       	ldi	r27, 0x00	; 0
      4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
      50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
      52:	a4 3d       	cpi	r26, 0xD4	; 212
      54:	b2 07       	cpc	r27, r18
      56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
      58:	9f da       	rcall	.-2754   	; 0xfffff598 <__eeprom_end+0xff7ef540>
      5a:	d6 ca       	rjmp	.-2644   	; 0xfffff608 <__eeprom_end+0xff7ef5b0>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <UART_SendChar>:
				if(bt_wait_sel_d > WAIT / 2)
					up_short();
			}
		}
}
void dn_long(){
      5e:	8c b9       	out	0x0c, r24	; 12
      60:	5d 9b       	sbis	0x0b, 5	; 11
      62:	fe cf       	rjmp	.-4      	; 0x60 <UART_SendChar+0x2>
      64:	08 95       	ret

00000066 <shiftout>:
      66:	f8 94       	cli
      68:	81 11       	cpse	r24, r1
      6a:	02 c0       	rjmp	.+4      	; 0x70 <shiftout+0xa>
      6c:	96 9a       	sbi	0x12, 6	; 18
      6e:	01 c0       	rjmp	.+2      	; 0x72 <shiftout+0xc>
      70:	96 98       	cbi	0x12, 6	; 18
      72:	95 9a       	sbi	0x12, 5	; 18
      74:	95 98       	cbi	0x12, 5	; 18
      76:	88 e0       	ldi	r24, 0x08	; 8
      78:	67 ff       	sbrs	r22, 7
      7a:	02 c0       	rjmp	.+4      	; 0x80 <shiftout+0x1a>
      7c:	96 9a       	sbi	0x12, 6	; 18
      7e:	01 c0       	rjmp	.+2      	; 0x82 <shiftout+0x1c>
      80:	96 98       	cbi	0x12, 6	; 18
      82:	95 9a       	sbi	0x12, 5	; 18
      84:	95 98       	cbi	0x12, 5	; 18
      86:	66 0f       	add	r22, r22
      88:	81 50       	subi	r24, 0x01	; 1
      8a:	b1 f7       	brne	.-20     	; 0x78 <shiftout+0x12>
      8c:	78 94       	sei
      8e:	08 95       	ret

00000090 <i2c_init>:
      90:	81 b1       	in	r24, 0x01	; 1
      92:	8c 7f       	andi	r24, 0xFC	; 252
      94:	81 b9       	out	0x01, r24	; 1
      96:	10 b8       	out	0x00, r1	; 0
      98:	08 95       	ret

0000009a <goto_page>:
      9a:	cf 93       	push	r28
      9c:	df 93       	push	r29
      9e:	d8 2f       	mov	r29, r24
      a0:	c6 2f       	mov	r28, r22
      a2:	f8 94       	cli
      a4:	62 e2       	ldi	r22, 0x22	; 34
      a6:	81 e0       	ldi	r24, 0x01	; 1
      a8:	de df       	rcall	.-68     	; 0x66 <shiftout>
      aa:	6d 2f       	mov	r22, r29
      ac:	81 e0       	ldi	r24, 0x01	; 1
      ae:	db df       	rcall	.-74     	; 0x66 <shiftout>
      b0:	6c 2f       	mov	r22, r28
      b2:	81 e0       	ldi	r24, 0x01	; 1
      b4:	d8 df       	rcall	.-80     	; 0x66 <shiftout>
      b6:	78 94       	sei
      b8:	df 91       	pop	r29
      ba:	cf 91       	pop	r28
      bc:	08 95       	ret

000000be <goto_x>:
      be:	cf 93       	push	r28
      c0:	df 93       	push	r29
      c2:	d8 2f       	mov	r29, r24
      c4:	c6 2f       	mov	r28, r22
      c6:	f8 94       	cli
      c8:	61 e2       	ldi	r22, 0x21	; 33
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	cc df       	rcall	.-104    	; 0x66 <shiftout>
      ce:	6d 2f       	mov	r22, r29
      d0:	81 e0       	ldi	r24, 0x01	; 1
      d2:	c9 df       	rcall	.-110    	; 0x66 <shiftout>
      d4:	6c 2f       	mov	r22, r28
      d6:	81 e0       	ldi	r24, 0x01	; 1
      d8:	c6 df       	rcall	.-116    	; 0x66 <shiftout>
      da:	78 94       	sei
      dc:	df 91       	pop	r29
      de:	cf 91       	pop	r28
      e0:	08 95       	ret

000000e2 <i2c_action>:
      e2:	82 30       	cpi	r24, 0x02	; 2
      e4:	51 f0       	breq	.+20     	; 0xfa <i2c_action+0x18>
      e6:	38 f0       	brcs	.+14     	; 0xf6 <i2c_action+0x14>
      e8:	84 30       	cpi	r24, 0x04	; 4
      ea:	69 f0       	breq	.+26     	; 0x106 <i2c_action+0x24>
      ec:	48 f0       	brcs	.+18     	; 0x100 <i2c_action+0x1e>
      ee:	85 30       	cpi	r24, 0x05	; 5
      f0:	69 f4       	brne	.+26     	; 0x10c <i2c_action+0x2a>
      f2:	84 e8       	ldi	r24, 0x84	; 132
      f4:	09 c0       	rjmp	.+18     	; 0x108 <i2c_action+0x26>
      f6:	94 ea       	ldi	r25, 0xA4	; 164
      f8:	04 c0       	rjmp	.+8      	; 0x102 <i2c_action+0x20>
      fa:	84 e9       	ldi	r24, 0x94	; 148
      fc:	86 bf       	out	0x36, r24	; 54
      fe:	0b c0       	rjmp	.+22     	; 0x116 <i2c_action+0x34>
     100:	94 e8       	ldi	r25, 0x84	; 132
     102:	96 bf       	out	0x36, r25	; 54
     104:	03 c0       	rjmp	.+6      	; 0x10c <i2c_action+0x2a>
     106:	84 ec       	ldi	r24, 0xC4	; 196
     108:	86 bf       	out	0x36, r24	; 54
     10a:	02 c0       	rjmp	.+4      	; 0x110 <i2c_action+0x2e>
     10c:	82 30       	cpi	r24, 0x02	; 2
     10e:	19 f0       	breq	.+6      	; 0x116 <i2c_action+0x34>
     110:	06 b6       	in	r0, 0x36	; 54
     112:	07 fe       	sbrs	r0, 7
     114:	fd cf       	rjmp	.-6      	; 0x110 <i2c_action+0x2e>
     116:	81 b1       	in	r24, 0x01	; 1
     118:	88 7f       	andi	r24, 0xF8	; 248
     11a:	88 33       	cpi	r24, 0x38	; 56
     11c:	31 f0       	breq	.+12     	; 0x12a <i2c_action+0x48>
     11e:	88 34       	cpi	r24, 0x48	; 72
     120:	21 f0       	breq	.+8      	; 0x12a <i2c_action+0x48>
     122:	80 32       	cpi	r24, 0x20	; 32
     124:	11 f0       	breq	.+4      	; 0x12a <i2c_action+0x48>
     126:	80 e0       	ldi	r24, 0x00	; 0
     128:	08 95       	ret
     12a:	81 e0       	ldi	r24, 0x01	; 1
     12c:	08 95       	ret

0000012e <i2c_send_byte>:
     12e:	ef 92       	push	r14
     130:	ff 92       	push	r15
     132:	0f 93       	push	r16
     134:	1f 93       	push	r17
     136:	cf 93       	push	r28
     138:	df 93       	push	r29
     13a:	1f 92       	push	r1
     13c:	cd b7       	in	r28, 0x3d	; 61
     13e:	de b7       	in	r29, 0x3e	; 62
     140:	e8 2e       	mov	r14, r24
     142:	06 2f       	mov	r16, r22
     144:	14 2f       	mov	r17, r20
     146:	f8 94       	cli
     148:	80 e0       	ldi	r24, 0x00	; 0
     14a:	79 83       	std	Y+1, r23	; 0x01
     14c:	ca df       	rcall	.-108    	; 0xe2 <i2c_action>
     14e:	f8 2e       	mov	r15, r24
     150:	8e 2d       	mov	r24, r14
     152:	88 0f       	add	r24, r24
     154:	83 b9       	out	0x03, r24	; 3
     156:	83 e0       	ldi	r24, 0x03	; 3
     158:	c4 df       	rcall	.-120    	; 0xe2 <i2c_action>
     15a:	f8 0e       	add	r15, r24
     15c:	79 81       	ldd	r23, Y+1	; 0x01
     15e:	88 e6       	ldi	r24, 0x68	; 104
     160:	e8 16       	cp	r14, r24
     162:	21 f0       	breq	.+8      	; 0x16c <i2c_send_byte+0x3e>
     164:	73 b9       	out	0x03, r23	; 3
     166:	83 e0       	ldi	r24, 0x03	; 3
     168:	bc df       	rcall	.-136    	; 0xe2 <i2c_action>
     16a:	f8 0e       	add	r15, r24
     16c:	03 b9       	out	0x03, r16	; 3
     16e:	83 e0       	ldi	r24, 0x03	; 3
     170:	b8 df       	rcall	.-144    	; 0xe2 <i2c_action>
     172:	f8 0e       	add	r15, r24
     174:	13 b9       	out	0x03, r17	; 3
     176:	83 e0       	ldi	r24, 0x03	; 3
     178:	b4 df       	rcall	.-152    	; 0xe2 <i2c_action>
     17a:	f8 0e       	add	r15, r24
     17c:	82 e0       	ldi	r24, 0x02	; 2
     17e:	b1 df       	rcall	.-158    	; 0xe2 <i2c_action>
     180:	8f 0d       	add	r24, r15
     182:	0f 90       	pop	r0
     184:	df 91       	pop	r29
     186:	cf 91       	pop	r28
     188:	1f 91       	pop	r17
     18a:	0f 91       	pop	r16
     18c:	ff 90       	pop	r15
     18e:	ef 90       	pop	r14
     190:	08 95       	ret

00000192 <i2c_send_arr>:
     192:	ef 92       	push	r14
     194:	ff 92       	push	r15
     196:	0f 93       	push	r16
     198:	1f 93       	push	r17
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	18 2f       	mov	r17, r24
     1a0:	eb 01       	movw	r28, r22
     1a2:	04 2f       	mov	r16, r20
     1a4:	e5 2e       	mov	r14, r21
     1a6:	f2 2e       	mov	r15, r18
     1a8:	84 35       	cpi	r24, 0x54	; 84
     1aa:	19 f4       	brne	.+6      	; 0x1b2 <i2c_send_arr+0x20>
     1ac:	60 36       	cpi	r22, 0x60	; 96
     1ae:	79 40       	sbci	r23, 0x09	; 9
     1b0:	f8 f0       	brcs	.+62     	; 0x1f0 <i2c_send_arr+0x5e>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	96 df       	rcall	.-212    	; 0xe2 <i2c_action>
     1b6:	81 2f       	mov	r24, r17
     1b8:	88 0f       	add	r24, r24
     1ba:	83 b9       	out	0x03, r24	; 3
     1bc:	83 e0       	ldi	r24, 0x03	; 3
     1be:	91 df       	rcall	.-222    	; 0xe2 <i2c_action>
     1c0:	18 36       	cpi	r17, 0x68	; 104
     1c2:	19 f0       	breq	.+6      	; 0x1ca <i2c_send_arr+0x38>
     1c4:	d3 b9       	out	0x03, r29	; 3
     1c6:	83 e0       	ldi	r24, 0x03	; 3
     1c8:	8c df       	rcall	.-232    	; 0xe2 <i2c_action>
     1ca:	c3 b9       	out	0x03, r28	; 3
     1cc:	83 e0       	ldi	r24, 0x03	; 3
     1ce:	89 df       	rcall	.-238    	; 0xe2 <i2c_action>
     1d0:	10 2f       	mov	r17, r16
     1d2:	c0 2f       	mov	r28, r16
     1d4:	de 2d       	mov	r29, r14
     1d6:	8c 2f       	mov	r24, r28
     1d8:	81 1b       	sub	r24, r17
     1da:	8f 15       	cp	r24, r15
     1dc:	28 f4       	brcc	.+10     	; 0x1e8 <i2c_send_arr+0x56>
     1de:	89 91       	ld	r24, Y+
     1e0:	83 b9       	out	0x03, r24	; 3
     1e2:	83 e0       	ldi	r24, 0x03	; 3
     1e4:	7e df       	rcall	.-260    	; 0xe2 <i2c_action>
     1e6:	f7 cf       	rjmp	.-18     	; 0x1d6 <i2c_send_arr+0x44>
     1e8:	82 e0       	ldi	r24, 0x02	; 2
     1ea:	7b df       	rcall	.-266    	; 0xe2 <i2c_action>
     1ec:	80 e0       	ldi	r24, 0x00	; 0
     1ee:	01 c0       	rjmp	.+2      	; 0x1f2 <i2c_send_arr+0x60>
     1f0:	81 e0       	ldi	r24, 0x01	; 1
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	1f 91       	pop	r17
     1f8:	0f 91       	pop	r16
     1fa:	ff 90       	pop	r15
     1fc:	ef 90       	pop	r14
     1fe:	08 95       	ret

00000200 <i2c_read_byte>:
     200:	0f 93       	push	r16
     202:	1f 93       	push	r17
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	1f 92       	push	r1
     20a:	cd b7       	in	r28, 0x3d	; 61
     20c:	de b7       	in	r29, 0x3e	; 62
     20e:	18 2f       	mov	r17, r24
     210:	06 2f       	mov	r16, r22
     212:	80 e0       	ldi	r24, 0x00	; 0
     214:	79 83       	std	Y+1, r23	; 0x01
     216:	65 df       	rcall	.-310    	; 0xe2 <i2c_action>
     218:	81 2f       	mov	r24, r17
     21a:	88 0f       	add	r24, r24
     21c:	83 b9       	out	0x03, r24	; 3
     21e:	83 e0       	ldi	r24, 0x03	; 3
     220:	60 df       	rcall	.-320    	; 0xe2 <i2c_action>
     222:	79 81       	ldd	r23, Y+1	; 0x01
     224:	18 36       	cpi	r17, 0x68	; 104
     226:	19 f0       	breq	.+6      	; 0x22e <i2c_read_byte+0x2e>
     228:	73 b9       	out	0x03, r23	; 3
     22a:	83 e0       	ldi	r24, 0x03	; 3
     22c:	5a df       	rcall	.-332    	; 0xe2 <i2c_action>
     22e:	03 b9       	out	0x03, r16	; 3
     230:	83 e0       	ldi	r24, 0x03	; 3
     232:	57 df       	rcall	.-338    	; 0xe2 <i2c_action>
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	55 df       	rcall	.-342    	; 0xe2 <i2c_action>
     238:	81 2f       	mov	r24, r17
     23a:	88 0f       	add	r24, r24
     23c:	81 60       	ori	r24, 0x01	; 1
     23e:	83 b9       	out	0x03, r24	; 3
     240:	84 e0       	ldi	r24, 0x04	; 4
     242:	4f df       	rcall	.-354    	; 0xe2 <i2c_action>
     244:	85 e0       	ldi	r24, 0x05	; 5
     246:	4d df       	rcall	.-358    	; 0xe2 <i2c_action>
     248:	13 b1       	in	r17, 0x03	; 3
     24a:	82 e0       	ldi	r24, 0x02	; 2
     24c:	4a df       	rcall	.-364    	; 0xe2 <i2c_action>
     24e:	81 2f       	mov	r24, r17
     250:	0f 90       	pop	r0
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	1f 91       	pop	r17
     258:	0f 91       	pop	r16
     25a:	08 95       	ret

0000025c <i2c_read_arr>:
     25c:	cf 92       	push	r12
     25e:	df 92       	push	r13
     260:	ef 92       	push	r14
     262:	ff 92       	push	r15
     264:	0f 93       	push	r16
     266:	1f 93       	push	r17
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	1f 92       	push	r1
     26e:	cd b7       	in	r28, 0x3d	; 61
     270:	de b7       	in	r29, 0x3e	; 62
     272:	08 2f       	mov	r16, r24
     274:	16 2f       	mov	r17, r22
     276:	e4 2e       	mov	r14, r20
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	79 83       	std	Y+1, r23	; 0x01
     27c:	32 df       	rcall	.-412    	; 0xe2 <i2c_action>
     27e:	80 2f       	mov	r24, r16
     280:	88 0f       	add	r24, r24
     282:	83 b9       	out	0x03, r24	; 3
     284:	83 e0       	ldi	r24, 0x03	; 3
     286:	2d df       	rcall	.-422    	; 0xe2 <i2c_action>
     288:	79 81       	ldd	r23, Y+1	; 0x01
     28a:	08 36       	cpi	r16, 0x68	; 104
     28c:	19 f0       	breq	.+6      	; 0x294 <i2c_read_arr+0x38>
     28e:	73 b9       	out	0x03, r23	; 3
     290:	83 e0       	ldi	r24, 0x03	; 3
     292:	27 df       	rcall	.-434    	; 0xe2 <i2c_action>
     294:	13 b9       	out	0x03, r17	; 3
     296:	83 e0       	ldi	r24, 0x03	; 3
     298:	24 df       	rcall	.-440    	; 0xe2 <i2c_action>
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	22 df       	rcall	.-444    	; 0xe2 <i2c_action>
     29e:	80 2f       	mov	r24, r16
     2a0:	88 0f       	add	r24, r24
     2a2:	81 60       	ori	r24, 0x01	; 1
     2a4:	83 b9       	out	0x03, r24	; 3
     2a6:	84 e0       	ldi	r24, 0x04	; 4
     2a8:	1c df       	rcall	.-456    	; 0xe2 <i2c_action>
     2aa:	f1 2c       	mov	r15, r1
     2ac:	8e 2d       	mov	r24, r14
     2ae:	90 e0       	ldi	r25, 0x00	; 0
     2b0:	6c 01       	movw	r12, r24
     2b2:	21 e0       	ldi	r18, 0x01	; 1
     2b4:	c2 1a       	sub	r12, r18
     2b6:	d1 08       	sbc	r13, r1
     2b8:	0f 2d       	mov	r16, r15
     2ba:	10 e0       	ldi	r17, 0x00	; 0
     2bc:	0c 15       	cp	r16, r12
     2be:	1d 05       	cpc	r17, r13
     2c0:	4c f4       	brge	.+18     	; 0x2d4 <i2c_read_arr+0x78>
     2c2:	84 e0       	ldi	r24, 0x04	; 4
     2c4:	0e df       	rcall	.-484    	; 0xe2 <i2c_action>
     2c6:	83 b1       	in	r24, 0x03	; 3
     2c8:	f8 01       	movw	r30, r16
     2ca:	ee 51       	subi	r30, 0x1E	; 30
     2cc:	ff 4f       	sbci	r31, 0xFF	; 255
     2ce:	80 83       	st	Z, r24
     2d0:	f3 94       	inc	r15
     2d2:	f2 cf       	rjmp	.-28     	; 0x2b8 <i2c_read_arr+0x5c>
     2d4:	85 e0       	ldi	r24, 0x05	; 5
     2d6:	05 df       	rcall	.-502    	; 0xe2 <i2c_action>
     2d8:	83 b1       	in	r24, 0x03	; 3
     2da:	f6 01       	movw	r30, r12
     2dc:	ee 51       	subi	r30, 0x1E	; 30
     2de:	ff 4f       	sbci	r31, 0xFF	; 255
     2e0:	80 83       	st	Z, r24
     2e2:	82 e0       	ldi	r24, 0x02	; 2
     2e4:	0f 90       	pop	r0
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	1f 91       	pop	r17
     2ec:	0f 91       	pop	r16
     2ee:	ff 90       	pop	r15
     2f0:	ef 90       	pop	r14
     2f2:	df 90       	pop	r13
     2f4:	cf 90       	pop	r12
     2f6:	f5 ce       	rjmp	.-534    	; 0xe2 <i2c_action>

000002f8 <ds3231_init>:
     2f8:	6e e0       	ldi	r22, 0x0E	; 14
     2fa:	70 e1       	ldi	r23, 0x10	; 16
     2fc:	88 e6       	ldi	r24, 0x68	; 104
     2fe:	80 df       	rcall	.-256    	; 0x200 <i2c_read_byte>
     300:	48 2f       	mov	r20, r24
     302:	4f 77       	andi	r20, 0x7F	; 127
     304:	6e e0       	ldi	r22, 0x0E	; 14
     306:	70 e1       	ldi	r23, 0x10	; 16
     308:	88 e6       	ldi	r24, 0x68	; 104
     30a:	11 cf       	rjmp	.-478    	; 0x12e <i2c_send_byte>

0000030c <ds3231_byte>:
     30c:	6a e0       	ldi	r22, 0x0A	; 10
     30e:	68 d9       	rcall	.-3376   	; 0xfffff5e0 <__eeprom_end+0xff7ef588>
     310:	29 2f       	mov	r18, r25
     312:	30 e1       	ldi	r19, 0x10	; 16
     314:	83 9f       	mul	r24, r19
     316:	c0 01       	movw	r24, r0
     318:	11 24       	eor	r1, r1
     31a:	82 2b       	or	r24, r18
     31c:	08 95       	ret

0000031e <ds3231_read_time>:
     31e:	43 e0       	ldi	r20, 0x03	; 3
     320:	60 e0       	ldi	r22, 0x00	; 0
     322:	70 e0       	ldi	r23, 0x00	; 0
     324:	88 e6       	ldi	r24, 0x68	; 104
     326:	9a df       	rcall	.-204    	; 0x25c <i2c_read_arr>
     328:	a2 ee       	ldi	r26, 0xE2	; 226
     32a:	b0 e0       	ldi	r27, 0x00	; 0
     32c:	8c 91       	ld	r24, X
     32e:	e9 ec       	ldi	r30, 0xC9	; 201
     330:	f1 e0       	ldi	r31, 0x01	; 1
     332:	98 2f       	mov	r25, r24
     334:	90 77       	andi	r25, 0x70	; 112
     336:	96 95       	lsr	r25
     338:	96 95       	lsr	r25
     33a:	96 95       	lsr	r25
     33c:	29 2f       	mov	r18, r25
     33e:	22 0f       	add	r18, r18
     340:	22 0f       	add	r18, r18
     342:	92 0f       	add	r25, r18
     344:	8f 70       	andi	r24, 0x0F	; 15
     346:	89 0f       	add	r24, r25
     348:	82 83       	std	Z+2, r24	; 0x02
     34a:	11 96       	adiw	r26, 0x01	; 1
     34c:	8c 91       	ld	r24, X
     34e:	11 97       	sbiw	r26, 0x01	; 1
     350:	98 2f       	mov	r25, r24
     352:	90 77       	andi	r25, 0x70	; 112
     354:	96 95       	lsr	r25
     356:	96 95       	lsr	r25
     358:	96 95       	lsr	r25
     35a:	29 2f       	mov	r18, r25
     35c:	22 0f       	add	r18, r18
     35e:	22 0f       	add	r18, r18
     360:	92 0f       	add	r25, r18
     362:	8f 70       	andi	r24, 0x0F	; 15
     364:	89 0f       	add	r24, r25
     366:	81 83       	std	Z+1, r24	; 0x01
     368:	12 96       	adiw	r26, 0x02	; 2
     36a:	8c 91       	ld	r24, X
     36c:	98 2f       	mov	r25, r24
     36e:	90 73       	andi	r25, 0x30	; 48
     370:	96 95       	lsr	r25
     372:	96 95       	lsr	r25
     374:	96 95       	lsr	r25
     376:	29 2f       	mov	r18, r25
     378:	22 0f       	add	r18, r18
     37a:	22 0f       	add	r18, r18
     37c:	92 0f       	add	r25, r18
     37e:	8f 70       	andi	r24, 0x0F	; 15
     380:	89 0f       	add	r24, r25
     382:	80 83       	st	Z, r24
     384:	08 95       	ret

00000386 <ds3231_write_time>:
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	00 d0       	rcall	.+0      	; 0x38e <ds3231_write_time+0x8>
     38e:	00 d0       	rcall	.+0      	; 0x390 <ds3231_write_time+0xa>
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	18 2f       	mov	r17, r24
     396:	84 2f       	mov	r24, r20
     398:	6c 83       	std	Y+4, r22	; 0x04
     39a:	b8 df       	rcall	.-144    	; 0x30c <ds3231_byte>
     39c:	89 83       	std	Y+1, r24	; 0x01
     39e:	6c 81       	ldd	r22, Y+4	; 0x04
     3a0:	86 2f       	mov	r24, r22
     3a2:	b4 df       	rcall	.-152    	; 0x30c <ds3231_byte>
     3a4:	8a 83       	std	Y+2, r24	; 0x02
     3a6:	81 2f       	mov	r24, r17
     3a8:	b1 df       	rcall	.-158    	; 0x30c <ds3231_byte>
     3aa:	8b 83       	std	Y+3, r24	; 0x03
     3ac:	23 e0       	ldi	r18, 0x03	; 3
     3ae:	ae 01       	movw	r20, r28
     3b0:	4f 5f       	subi	r20, 0xFF	; 255
     3b2:	5f 4f       	sbci	r21, 0xFF	; 255
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	88 e6       	ldi	r24, 0x68	; 104
     3ba:	eb de       	rcall	.-554    	; 0x192 <i2c_send_arr>
     3bc:	0f 90       	pop	r0
     3be:	0f 90       	pop	r0
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	df 91       	pop	r29
     3c6:	cf 91       	pop	r28
     3c8:	1f 91       	pop	r17
     3ca:	08 95       	ret

000003cc <ds3231_read_date>:
     3cc:	44 e0       	ldi	r20, 0x04	; 4
     3ce:	63 e0       	ldi	r22, 0x03	; 3
     3d0:	70 e1       	ldi	r23, 0x10	; 16
     3d2:	88 e6       	ldi	r24, 0x68	; 104
     3d4:	43 df       	rcall	.-378    	; 0x25c <i2c_read_arr>
     3d6:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <ret_arr>
     3da:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <date>
     3de:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <ret_arr+0x1>
     3e2:	98 2f       	mov	r25, r24
     3e4:	92 95       	swap	r25
     3e6:	9f 70       	andi	r25, 0x0F	; 15
     3e8:	8f 70       	andi	r24, 0x0F	; 15
     3ea:	2a e0       	ldi	r18, 0x0A	; 10
     3ec:	92 9f       	mul	r25, r18
     3ee:	80 0d       	add	r24, r0
     3f0:	11 24       	eor	r1, r1
     3f2:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <date+0x1>
     3f6:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <ret_arr+0x2>
     3fa:	84 fb       	bst	r24, 4
     3fc:	99 27       	eor	r25, r25
     3fe:	90 f9       	bld	r25, 0
     400:	99 0f       	add	r25, r25
     402:	29 2f       	mov	r18, r25
     404:	22 0f       	add	r18, r18
     406:	22 0f       	add	r18, r18
     408:	92 0f       	add	r25, r18
     40a:	8f 70       	andi	r24, 0x0F	; 15
     40c:	89 0f       	add	r24, r25
     40e:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <date+0x2>
     412:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <ret_arr+0x3>
     416:	98 2f       	mov	r25, r24
     418:	92 95       	swap	r25
     41a:	9f 70       	andi	r25, 0x0F	; 15
     41c:	8f 70       	andi	r24, 0x0F	; 15
     41e:	2a e0       	ldi	r18, 0x0A	; 10
     420:	92 9f       	mul	r25, r18
     422:	80 0d       	add	r24, r0
     424:	11 24       	eor	r1, r1
     426:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <date+0x3>
     42a:	a1 ed       	ldi	r26, 0xD1	; 209
     42c:	b1 e0       	ldi	r27, 0x01	; 1
     42e:	20 e0       	ldi	r18, 0x00	; 0
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	4a e0       	ldi	r20, 0x0A	; 10
     434:	8d 91       	ld	r24, X+
     436:	f9 01       	movw	r30, r18
     438:	e6 54       	subi	r30, 0x46	; 70
     43a:	ff 4f       	sbci	r31, 0xFF	; 255
     43c:	64 2f       	mov	r22, r20
     43e:	d0 d8       	rcall	.-3680   	; 0xfffff5e0 <__eeprom_end+0xff7ef588>
     440:	80 5d       	subi	r24, 0xD0	; 208
     442:	80 83       	st	Z, r24
     444:	90 5d       	subi	r25, 0xD0	; 208
     446:	91 83       	std	Z+1, r25	; 0x01
     448:	2d 5f       	subi	r18, 0xFD	; 253
     44a:	3f 4f       	sbci	r19, 0xFF	; 255
     44c:	29 30       	cpi	r18, 0x09	; 9
     44e:	31 05       	cpc	r19, r1
     450:	89 f7       	brne	.-30     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     452:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <date_str+0x8>
     456:	08 95       	ret

00000458 <ds3231_write_date>:
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
     45c:	cd b7       	in	r28, 0x3d	; 61
     45e:	de b7       	in	r29, 0x3e	; 62
     460:	27 97       	sbiw	r28, 0x07	; 7
     462:	0f b6       	in	r0, 0x3f	; 63
     464:	f8 94       	cli
     466:	de bf       	out	0x3e, r29	; 62
     468:	0f be       	out	0x3f, r0	; 63
     46a:	cd bf       	out	0x3d, r28	; 61
     46c:	2f 83       	std	Y+7, r18	; 0x07
     46e:	4e 83       	std	Y+6, r20	; 0x06
     470:	6d 83       	std	Y+5, r22	; 0x05
     472:	4c df       	rcall	.-360    	; 0x30c <ds3231_byte>
     474:	89 83       	std	Y+1, r24	; 0x01
     476:	6d 81       	ldd	r22, Y+5	; 0x05
     478:	86 2f       	mov	r24, r22
     47a:	48 df       	rcall	.-368    	; 0x30c <ds3231_byte>
     47c:	8a 83       	std	Y+2, r24	; 0x02
     47e:	4e 81       	ldd	r20, Y+6	; 0x06
     480:	84 2f       	mov	r24, r20
     482:	44 df       	rcall	.-376    	; 0x30c <ds3231_byte>
     484:	8b 83       	std	Y+3, r24	; 0x03
     486:	2f 81       	ldd	r18, Y+7	; 0x07
     488:	82 2f       	mov	r24, r18
     48a:	40 df       	rcall	.-384    	; 0x30c <ds3231_byte>
     48c:	8c 83       	std	Y+4, r24	; 0x04
     48e:	24 e0       	ldi	r18, 0x04	; 4
     490:	ae 01       	movw	r20, r28
     492:	4f 5f       	subi	r20, 0xFF	; 255
     494:	5f 4f       	sbci	r21, 0xFF	; 255
     496:	63 e0       	ldi	r22, 0x03	; 3
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	88 e6       	ldi	r24, 0x68	; 104
     49c:	7a de       	rcall	.-780    	; 0x192 <i2c_send_arr>
     49e:	27 96       	adiw	r28, 0x07	; 7
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	df 91       	pop	r29
     4ac:	cf 91       	pop	r28
     4ae:	08 95       	ret

000004b0 <lcd_res>:
     4b0:	1f 93       	push	r17
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	f8 94       	cli
     4b8:	97 9a       	sbi	0x12, 7	; 18
     4ba:	83 e5       	ldi	r24, 0x53	; 83
     4bc:	8a 95       	dec	r24
     4be:	f1 f7       	brne	.-4      	; 0x4bc <lcd_res+0xc>
     4c0:	00 00       	nop
     4c2:	97 98       	cbi	0x12, 7	; 18
     4c4:	81 ee       	ldi	r24, 0xE1	; 225
     4c6:	94 e0       	ldi	r25, 0x04	; 4
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <lcd_res+0x18>
     4cc:	00 c0       	rjmp	.+0      	; 0x4ce <lcd_res+0x1e>
     4ce:	00 00       	nop
     4d0:	97 9a       	sbi	0x12, 7	; 18
     4d2:	cf e3       	ldi	r28, 0x3F	; 63
     4d4:	d0 e0       	ldi	r29, 0x00	; 0
     4d6:	1c 2f       	mov	r17, r28
     4d8:	18 5e       	subi	r17, 0xE8	; 232
     4da:	ce 01       	movw	r24, r28
     4dc:	8d d8       	rcall	.-3814   	; 0xfffff5f8 <__eeprom_end+0xff7ef5a0>
     4de:	68 2f       	mov	r22, r24
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	c1 dd       	rcall	.-1150   	; 0x66 <shiftout>
     4e4:	21 96       	adiw	r28, 0x01	; 1
     4e6:	1c 13       	cpse	r17, r28
     4e8:	f8 cf       	rjmp	.-16     	; 0x4da <lcd_res+0x2a>
     4ea:	c0 e0       	ldi	r28, 0x00	; 0
     4ec:	d4 e0       	ldi	r29, 0x04	; 4
     4ee:	60 e0       	ldi	r22, 0x00	; 0
     4f0:	80 e0       	ldi	r24, 0x00	; 0
     4f2:	b9 dd       	rcall	.-1166   	; 0x66 <shiftout>
     4f4:	21 97       	sbiw	r28, 0x01	; 1
     4f6:	d9 f7       	brne	.-10     	; 0x4ee <lcd_res+0x3e>
     4f8:	87 e5       	ldi	r24, 0x57	; 87
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	7d d8       	rcall	.-3846   	; 0xfffff5f8 <__eeprom_end+0xff7ef5a0>
     4fe:	68 2f       	mov	r22, r24
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	b1 dd       	rcall	.-1182   	; 0x66 <shiftout>
     504:	78 94       	sei
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	1f 91       	pop	r17
     50c:	08 95       	ret

0000050e <eep_str_write>:
     50e:	df 92       	push	r13
     510:	ef 92       	push	r14
     512:	ff 92       	push	r15
     514:	0f 93       	push	r16
     516:	1f 93       	push	r17
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
     51c:	06 2f       	mov	r16, r22
     51e:	d8 2e       	mov	r13, r24
     520:	ec 01       	movw	r28, r24
     522:	82 ee       	ldi	r24, 0xE2	; 226
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	15 e0       	ldi	r17, 0x05	; 5
     528:	18 0f       	add	r17, r24
     52a:	8c 2f       	mov	r24, r28
     52c:	8d 19       	sub	r24, r13
     52e:	80 17       	cp	r24, r16
     530:	c8 f4       	brcc	.+50     	; 0x564 <eep_str_write+0x56>
     532:	ce 01       	movw	r24, r28
     534:	61 d8       	rcall	.-3902   	; 0xfffff5f8 <__eeprom_end+0xff7ef5a0>
     536:	95 e0       	ldi	r25, 0x05	; 5
     538:	89 9f       	mul	r24, r25
     53a:	b0 01       	movw	r22, r0
     53c:	11 24       	eor	r1, r1
     53e:	45 e0       	ldi	r20, 0x05	; 5
     540:	84 e5       	ldi	r24, 0x54	; 84
     542:	8c de       	rcall	.-744    	; 0x25c <i2c_read_arr>
     544:	82 ee       	ldi	r24, 0xE2	; 226
     546:	e8 2e       	mov	r14, r24
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	f8 2e       	mov	r15, r24
     54c:	f7 01       	movw	r30, r14
     54e:	61 91       	ld	r22, Z+
     550:	7f 01       	movw	r14, r30
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	88 dd       	rcall	.-1264   	; 0x66 <shiftout>
     556:	1e 11       	cpse	r17, r14
     558:	f9 cf       	rjmp	.-14     	; 0x54c <eep_str_write+0x3e>
     55a:	60 e0       	ldi	r22, 0x00	; 0
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	83 dd       	rcall	.-1274   	; 0x66 <shiftout>
     560:	21 96       	adiw	r28, 0x01	; 1
     562:	e3 cf       	rjmp	.-58     	; 0x52a <eep_str_write+0x1c>
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	1f 91       	pop	r17
     56a:	0f 91       	pop	r16
     56c:	ff 90       	pop	r15
     56e:	ef 90       	pop	r14
     570:	df 90       	pop	r13
     572:	08 95       	ret

00000574 <strlen_q>:
     574:	9c 01       	movw	r18, r24
     576:	80 e0       	ldi	r24, 0x00	; 0
     578:	f9 01       	movw	r30, r18
     57a:	e8 0f       	add	r30, r24
     57c:	f1 1d       	adc	r31, r1
     57e:	90 81       	ld	r25, Z
     580:	99 23       	and	r25, r25
     582:	11 f0       	breq	.+4      	; 0x588 <strlen_q+0x14>
     584:	8f 5f       	subi	r24, 0xFF	; 255
     586:	f8 cf       	rjmp	.-16     	; 0x578 <strlen_q+0x4>
     588:	08 95       	ret

0000058a <word_out>:
     58a:	2f 92       	push	r2
     58c:	3f 92       	push	r3
     58e:	5f 92       	push	r5
     590:	6f 92       	push	r6
     592:	7f 92       	push	r7
     594:	8f 92       	push	r8
     596:	9f 92       	push	r9
     598:	af 92       	push	r10
     59a:	bf 92       	push	r11
     59c:	cf 92       	push	r12
     59e:	df 92       	push	r13
     5a0:	ef 92       	push	r14
     5a2:	ff 92       	push	r15
     5a4:	0f 93       	push	r16
     5a6:	1f 93       	push	r17
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
     5ac:	ec 01       	movw	r28, r24
     5ae:	7b 01       	movw	r14, r22
     5b0:	cb 01       	movw	r24, r22
     5b2:	e0 df       	rcall	.-64     	; 0x574 <strlen_q>
     5b4:	88 2e       	mov	r8, r24
     5b6:	18 81       	ld	r17, Y
     5b8:	69 81       	ldd	r22, Y+1	; 0x01
     5ba:	81 2f       	mov	r24, r17
     5bc:	6e dd       	rcall	.-1316   	; 0x9a <goto_page>
     5be:	6b 81       	ldd	r22, Y+3	; 0x03
     5c0:	8a 81       	ldd	r24, Y+2	; 0x02
     5c2:	7d dd       	rcall	.-1286   	; 0xbe <goto_x>
     5c4:	c8 2c       	mov	r12, r8
     5c6:	d1 2c       	mov	r13, r1
     5c8:	46 e0       	ldi	r20, 0x06	; 6
     5ca:	84 9e       	mul	r8, r20
     5cc:	40 01       	movw	r8, r0
     5ce:	11 24       	eor	r1, r1
     5d0:	00 e0       	ldi	r16, 0x00	; 0
     5d2:	b1 2c       	mov	r11, r1
     5d4:	a1 2c       	mov	r10, r1
     5d6:	5f ef       	ldi	r21, 0xFF	; 255
     5d8:	c5 1a       	sub	r12, r21
     5da:	d5 0a       	sbc	r13, r21
     5dc:	96 e0       	ldi	r25, 0x06	; 6
     5de:	59 2e       	mov	r5, r25
     5e0:	82 ee       	ldi	r24, 0xE2	; 226
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	25 e0       	ldi	r18, 0x05	; 5
     5e6:	62 2e       	mov	r6, r18
     5e8:	68 0e       	add	r6, r24
     5ea:	80 2f       	mov	r24, r16
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	f7 01       	movw	r30, r14
     5f0:	e8 0f       	add	r30, r24
     5f2:	f9 1f       	adc	r31, r25
     5f4:	e0 81       	ld	r30, Z
     5f6:	ee 23       	and	r30, r30
     5f8:	09 f4       	brne	.+2      	; 0x5fc <word_out+0x72>
     5fa:	77 c0       	rjmp	.+238    	; 0x6ea <word_out+0x160>
     5fc:	2b 81       	ldd	r18, Y+3	; 0x03
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	4a 81       	ldd	r20, Y+2	; 0x02
     602:	24 1b       	sub	r18, r20
     604:	31 09       	sbc	r19, r1
     606:	49 81       	ldd	r20, Y+1	; 0x01
     608:	50 e0       	ldi	r21, 0x00	; 0
     60a:	68 81       	ld	r22, Y
     60c:	46 1b       	sub	r20, r22
     60e:	51 09       	sbc	r21, r1
     610:	4f 5f       	subi	r20, 0xFF	; 255
     612:	5f 4f       	sbci	r21, 0xFF	; 255
     614:	24 9f       	mul	r18, r20
     616:	b0 01       	movw	r22, r0
     618:	25 9f       	mul	r18, r21
     61a:	70 0d       	add	r23, r0
     61c:	34 9f       	mul	r19, r20
     61e:	70 0d       	add	r23, r0
     620:	11 24       	eor	r1, r1
     622:	68 15       	cp	r22, r8
     624:	79 05       	cpc	r23, r9
     626:	0c f4       	brge	.+2      	; 0x62a <word_out+0xa0>
     628:	60 c0       	rjmp	.+192    	; 0x6ea <word_out+0x160>
     62a:	e0 32       	cpi	r30, 0x20	; 32
     62c:	69 f5       	brne	.+90     	; 0x688 <word_out+0xfe>
     62e:	77 24       	eor	r7, r7
     630:	73 94       	inc	r7
     632:	70 0e       	add	r7, r16
     634:	67 2d       	mov	r22, r7
     636:	46 2f       	mov	r20, r22
     638:	50 e0       	ldi	r21, 0x00	; 0
     63a:	c4 16       	cp	r12, r20
     63c:	d5 06       	cpc	r13, r21
     63e:	c4 f1       	brlt	.+112    	; 0x6b0 <word_out+0x126>
     640:	f7 01       	movw	r30, r14
     642:	e4 0f       	add	r30, r20
     644:	f5 1f       	adc	r31, r21
     646:	70 81       	ld	r23, Z
     648:	7f 7d       	andi	r23, 0xDF	; 223
     64a:	e1 f4       	brne	.+56     	; 0x684 <word_out+0xfa>
     64c:	48 1b       	sub	r20, r24
     64e:	59 0b       	sbc	r21, r25
     650:	54 9e       	mul	r5, r20
     652:	b0 01       	movw	r22, r0
     654:	55 9e       	mul	r5, r21
     656:	70 0d       	add	r23, r0
     658:	11 24       	eor	r1, r1
     65a:	4a ef       	ldi	r20, 0xFA	; 250
     65c:	5b 2d       	mov	r21, r11
     65e:	45 03       	mulsu	r20, r21
     660:	c0 01       	movw	r24, r0
     662:	11 24       	eor	r1, r1
     664:	28 0f       	add	r18, r24
     666:	39 1f       	adc	r19, r25
     668:	26 17       	cp	r18, r22
     66a:	37 07       	cpc	r19, r23
     66c:	08 f5       	brcc	.+66     	; 0x6b0 <word_out+0x126>
     66e:	17 30       	cpi	r17, 0x07	; 7
     670:	f9 f0       	breq	.+62     	; 0x6b0 <word_out+0x126>
     672:	1f 5f       	subi	r17, 0xFF	; 255
     674:	61 2f       	mov	r22, r17
     676:	81 2f       	mov	r24, r17
     678:	10 dd       	rcall	.-1504   	; 0x9a <goto_page>
     67a:	6b 81       	ldd	r22, Y+3	; 0x03
     67c:	8a 81       	ldd	r24, Y+2	; 0x02
     67e:	1f dd       	rcall	.-1474   	; 0xbe <goto_x>
     680:	07 2d       	mov	r16, r7
     682:	15 c0       	rjmp	.+42     	; 0x6ae <word_out+0x124>
     684:	6f 5f       	subi	r22, 0xFF	; 255
     686:	d7 cf       	rjmp	.-82     	; 0x636 <word_out+0xac>
     688:	4a ef       	ldi	r20, 0xFA	; 250
     68a:	5b 2d       	mov	r21, r11
     68c:	45 03       	mulsu	r20, r21
     68e:	c0 01       	movw	r24, r0
     690:	11 24       	eor	r1, r1
     692:	28 0f       	add	r18, r24
     694:	39 1f       	adc	r19, r25
     696:	26 30       	cpi	r18, 0x06	; 6
     698:	31 05       	cpc	r19, r1
     69a:	54 f4       	brge	.+20     	; 0x6b0 <word_out+0x126>
     69c:	17 30       	cpi	r17, 0x07	; 7
     69e:	29 f1       	breq	.+74     	; 0x6ea <word_out+0x160>
     6a0:	1f 5f       	subi	r17, 0xFF	; 255
     6a2:	61 2f       	mov	r22, r17
     6a4:	81 2f       	mov	r24, r17
     6a6:	f9 dc       	rcall	.-1550   	; 0x9a <goto_page>
     6a8:	6b 81       	ldd	r22, Y+3	; 0x03
     6aa:	8a 81       	ldd	r24, Y+2	; 0x02
     6ac:	08 dd       	rcall	.-1520   	; 0xbe <goto_x>
     6ae:	b1 2c       	mov	r11, r1
     6b0:	f7 01       	movw	r30, r14
     6b2:	e0 0f       	add	r30, r16
     6b4:	f1 1d       	adc	r31, r1
     6b6:	60 81       	ld	r22, Z
     6b8:	85 e0       	ldi	r24, 0x05	; 5
     6ba:	68 9f       	mul	r22, r24
     6bc:	b0 01       	movw	r22, r0
     6be:	11 24       	eor	r1, r1
     6c0:	45 e0       	ldi	r20, 0x05	; 5
     6c2:	84 e5       	ldi	r24, 0x54	; 84
     6c4:	cb dd       	rcall	.-1130   	; 0x25c <i2c_read_arr>
     6c6:	82 ee       	ldi	r24, 0xE2	; 226
     6c8:	28 2e       	mov	r2, r24
     6ca:	80 e0       	ldi	r24, 0x00	; 0
     6cc:	38 2e       	mov	r3, r24
     6ce:	f1 01       	movw	r30, r2
     6d0:	61 91       	ld	r22, Z+
     6d2:	1f 01       	movw	r2, r30
     6d4:	80 e0       	ldi	r24, 0x00	; 0
     6d6:	c7 dc       	rcall	.-1650   	; 0x66 <shiftout>
     6d8:	62 10       	cpse	r6, r2
     6da:	f9 cf       	rjmp	.-14     	; 0x6ce <word_out+0x144>
     6dc:	a3 94       	inc	r10
     6de:	b3 94       	inc	r11
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	c0 dc       	rcall	.-1664   	; 0x66 <shiftout>
     6e6:	0f 5f       	subi	r16, 0xFF	; 255
     6e8:	80 cf       	rjmp	.-256    	; 0x5ea <word_out+0x60>
     6ea:	8a 2d       	mov	r24, r10
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	1f 91       	pop	r17
     6f2:	0f 91       	pop	r16
     6f4:	ff 90       	pop	r15
     6f6:	ef 90       	pop	r14
     6f8:	df 90       	pop	r13
     6fa:	cf 90       	pop	r12
     6fc:	bf 90       	pop	r11
     6fe:	af 90       	pop	r10
     700:	9f 90       	pop	r9
     702:	8f 90       	pop	r8
     704:	7f 90       	pop	r7
     706:	6f 90       	pop	r6
     708:	5f 90       	pop	r5
     70a:	3f 90       	pop	r3
     70c:	2f 90       	pop	r2
     70e:	08 95       	ret

00000710 <fill_column>:
     710:	ef 92       	push	r14
     712:	ff 92       	push	r15
     714:	0f 93       	push	r16
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	1f 92       	push	r1
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
     722:	16 2f       	mov	r17, r22
     724:	e2 2e       	mov	r14, r18
     726:	68 2f       	mov	r22, r24
     728:	62 0f       	add	r22, r18
     72a:	49 83       	std	Y+1, r20	; 0x01
     72c:	c8 dc       	rcall	.-1648   	; 0xbe <goto_x>
     72e:	49 81       	ldd	r20, Y+1	; 0x01
     730:	64 2f       	mov	r22, r20
     732:	81 2f       	mov	r24, r17
     734:	b2 dc       	rcall	.-1692   	; 0x9a <goto_page>
     736:	86 e0       	ldi	r24, 0x06	; 6
     738:	e8 9e       	mul	r14, r24
     73a:	70 01       	movw	r14, r0
     73c:	11 24       	eor	r1, r1
     73e:	10 e0       	ldi	r17, 0x00	; 0
     740:	81 2f       	mov	r24, r17
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	e8 16       	cp	r14, r24
     746:	f9 06       	cpc	r15, r25
     748:	2c f0       	brlt	.+10     	; 0x754 <fill_column+0x44>
     74a:	60 2f       	mov	r22, r16
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	8b dc       	rcall	.-1770   	; 0x66 <shiftout>
     750:	1f 5f       	subi	r17, 0xFF	; 255
     752:	f6 cf       	rjmp	.-20     	; 0x740 <fill_column+0x30>
     754:	0f 90       	pop	r0
     756:	df 91       	pop	r29
     758:	cf 91       	pop	r28
     75a:	1f 91       	pop	r17
     75c:	0f 91       	pop	r16
     75e:	ff 90       	pop	r15
     760:	ef 90       	pop	r14
     762:	08 95       	ret

00000764 <draw_big_digit>:
     764:	bf 92       	push	r11
     766:	cf 92       	push	r12
     768:	df 92       	push	r13
     76a:	ef 92       	push	r14
     76c:	ff 92       	push	r15
     76e:	0f 93       	push	r16
     770:	1f 93       	push	r17
     772:	cf 93       	push	r28
     774:	df 93       	push	r29
     776:	d8 2e       	mov	r13, r24
     778:	b6 2e       	mov	r11, r22
     77a:	14 2f       	mov	r17, r20
     77c:	89 e0       	ldi	r24, 0x09	; 9
     77e:	8d 15       	cp	r24, r13
     780:	e8 f0       	brcs	.+58     	; 0x7bc <draw_big_digit+0x58>
     782:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
     786:	91 e0       	ldi	r25, 0x01	; 1
     788:	d9 12       	cpse	r13, r25
     78a:	0c c0       	rjmp	.+24     	; 0x7a4 <draw_big_digit+0x40>
     78c:	80 ff       	sbrs	r24, 0
     78e:	06 c0       	rjmp	.+12     	; 0x79c <draw_big_digit+0x38>
     790:	00 e0       	ldi	r16, 0x00	; 0
     792:	26 e0       	ldi	r18, 0x06	; 6
     794:	46 e0       	ldi	r20, 0x06	; 6
     796:	61 e0       	ldi	r22, 0x01	; 1
     798:	81 2f       	mov	r24, r17
     79a:	ba df       	rcall	.-140    	; 0x710 <fill_column>
     79c:	19 5f       	subi	r17, 0xF9	; 249
     79e:	96 e0       	ldi	r25, 0x06	; 6
     7a0:	c9 2e       	mov	r12, r25
     7a2:	0d c0       	rjmp	.+26     	; 0x7be <draw_big_digit+0x5a>
     7a4:	80 ff       	sbrs	r24, 0
     7a6:	06 c0       	rjmp	.+12     	; 0x7b4 <draw_big_digit+0x50>
     7a8:	00 e0       	ldi	r16, 0x00	; 0
     7aa:	22 e0       	ldi	r18, 0x02	; 2
     7ac:	46 e0       	ldi	r20, 0x06	; 6
     7ae:	61 e0       	ldi	r22, 0x01	; 1
     7b0:	81 2f       	mov	r24, r17
     7b2:	ae df       	rcall	.-164    	; 0x710 <fill_column>
     7b4:	1d 5f       	subi	r17, 0xFD	; 253
     7b6:	82 e0       	ldi	r24, 0x02	; 2
     7b8:	c8 2e       	mov	r12, r24
     7ba:	01 c0       	rjmp	.+2      	; 0x7be <draw_big_digit+0x5a>
     7bc:	c1 2c       	mov	r12, r1
     7be:	cd 2d       	mov	r28, r13
     7c0:	d0 e0       	ldi	r29, 0x00	; 0
     7c2:	ce 01       	movw	r24, r28
     7c4:	83 5d       	subi	r24, 0xD3	; 211
     7c6:	9f 4f       	sbci	r25, 0xFF	; 255
     7c8:	17 d7       	rcall	.+3630   	; 0x15f8 <eeprom_read_byte>
     7ca:	08 2f       	mov	r16, r24
     7cc:	ce 01       	movw	r24, r28
     7ce:	82 5d       	subi	r24, 0xD2	; 210
     7d0:	9f 4f       	sbci	r25, 0xFF	; 255
     7d2:	12 d7       	rcall	.+3620   	; 0x15f8 <eeprom_read_byte>
     7d4:	c8 2f       	mov	r28, r24
     7d6:	d0 e0       	ldi	r29, 0x00	; 0
     7d8:	c0 1b       	sub	r28, r16
     7da:	d1 09       	sbc	r29, r1
     7dc:	4c 2f       	mov	r20, r28
     7de:	44 0f       	add	r20, r20
     7e0:	44 0f       	add	r20, r20
     7e2:	4c 0f       	add	r20, r28
     7e4:	95 e0       	ldi	r25, 0x05	; 5
     7e6:	09 9f       	mul	r16, r25
     7e8:	90 01       	movw	r18, r0
     7ea:	11 24       	eor	r1, r1
     7ec:	b9 01       	movw	r22, r18
     7ee:	7b 5f       	subi	r23, 0xFB	; 251
     7f0:	84 e5       	ldi	r24, 0x54	; 84
     7f2:	34 dd       	rcall	.-1432   	; 0x25c <i2c_read_arr>
     7f4:	e1 2c       	mov	r14, r1
     7f6:	f1 2c       	mov	r15, r1
     7f8:	8b 2d       	mov	r24, r11
     7fa:	8e 0d       	add	r24, r14
     7fc:	68 2f       	mov	r22, r24
     7fe:	4d dc       	rcall	.-1894   	; 0x9a <goto_page>
     800:	6f e7       	ldi	r22, 0x7F	; 127
     802:	81 2f       	mov	r24, r17
     804:	5c dc       	rcall	.-1864   	; 0xbe <goto_x>
     806:	01 e0       	ldi	r16, 0x01	; 1
     808:	80 2f       	mov	r24, r16
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	c8 17       	cp	r28, r24
     80e:	d9 07       	cpc	r29, r25
     810:	78 f0       	brcs	.+30     	; 0x830 <draw_big_digit+0xcc>
     812:	f7 01       	movw	r30, r14
     814:	e0 95       	com	r30
     816:	f0 95       	com	r31
     818:	85 e0       	ldi	r24, 0x05	; 5
     81a:	08 9f       	mul	r16, r24
     81c:	e0 0d       	add	r30, r0
     81e:	f1 1d       	adc	r31, r1
     820:	11 24       	eor	r1, r1
     822:	ee 51       	subi	r30, 0x1E	; 30
     824:	ff 4f       	sbci	r31, 0xFF	; 255
     826:	60 81       	ld	r22, Z
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	1d dc       	rcall	.-1990   	; 0x66 <shiftout>
     82c:	0f 5f       	subi	r16, 0xFF	; 255
     82e:	ec cf       	rjmp	.-40     	; 0x808 <draw_big_digit+0xa4>
     830:	9f ef       	ldi	r25, 0xFF	; 255
     832:	e9 1a       	sub	r14, r25
     834:	f9 0a       	sbc	r15, r25
     836:	85 e0       	ldi	r24, 0x05	; 5
     838:	e8 16       	cp	r14, r24
     83a:	f1 04       	cpc	r15, r1
     83c:	e9 f6       	brne	.-70     	; 0x7f8 <draw_big_digit+0x94>
     83e:	9a e0       	ldi	r25, 0x0A	; 10
     840:	d9 16       	cp	r13, r25
     842:	69 f0       	breq	.+26     	; 0x85e <draw_big_digit+0xfa>
     844:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
     848:	80 ff       	sbrs	r24, 0
     84a:	09 c0       	rjmp	.+18     	; 0x85e <draw_big_digit+0xfa>
     84c:	2a e1       	ldi	r18, 0x1A	; 26
     84e:	2c 19       	sub	r18, r12
     850:	8c 2f       	mov	r24, r28
     852:	2c 1b       	sub	r18, r28
     854:	00 e0       	ldi	r16, 0x00	; 0
     856:	46 e0       	ldi	r20, 0x06	; 6
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	81 0f       	add	r24, r17
     85c:	59 df       	rcall	.-334    	; 0x710 <fill_column>
     85e:	df 91       	pop	r29
     860:	cf 91       	pop	r28
     862:	1f 91       	pop	r17
     864:	0f 91       	pop	r16
     866:	ff 90       	pop	r15
     868:	ef 90       	pop	r14
     86a:	df 90       	pop	r13
     86c:	cf 90       	pop	r12
     86e:	bf 90       	pop	r11
     870:	08 95       	ret

00000872 <comp_date>:
     872:	ec ec       	ldi	r30, 0xCC	; 204
     874:	f1 e0       	ldi	r31, 0x01	; 1
     876:	a0 ed       	ldi	r26, 0xD0	; 208
     878:	b1 e0       	ldi	r27, 0x01	; 1
     87a:	8c 91       	ld	r24, X
     87c:	80 83       	st	Z, r24
     87e:	11 96       	adiw	r26, 0x01	; 1
     880:	8c 91       	ld	r24, X
     882:	11 97       	sbiw	r26, 0x01	; 1
     884:	81 83       	std	Z+1, r24	; 0x01
     886:	12 96       	adiw	r26, 0x02	; 2
     888:	8c 91       	ld	r24, X
     88a:	12 97       	sbiw	r26, 0x02	; 2
     88c:	82 83       	std	Z+2, r24	; 0x02
     88e:	13 96       	adiw	r26, 0x03	; 3
     890:	8c 91       	ld	r24, X
     892:	83 83       	std	Z+3, r24	; 0x03
     894:	08 95       	ret

00000896 <tempDate_str>:
     896:	ad ec       	ldi	r26, 0xCD	; 205
     898:	b1 e0       	ldi	r27, 0x01	; 1
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	4a e0       	ldi	r20, 0x0A	; 10
     8a0:	8d 91       	ld	r24, X+
     8a2:	f9 01       	movw	r30, r18
     8a4:	e6 54       	subi	r30, 0x46	; 70
     8a6:	ff 4f       	sbci	r31, 0xFF	; 255
     8a8:	64 2f       	mov	r22, r20
     8aa:	9a d6       	rcall	.+3380   	; 0x15e0 <__udivmodqi4>
     8ac:	80 5d       	subi	r24, 0xD0	; 208
     8ae:	80 83       	st	Z, r24
     8b0:	90 5d       	subi	r25, 0xD0	; 208
     8b2:	91 83       	std	Z+1, r25	; 0x01
     8b4:	2d 5f       	subi	r18, 0xFD	; 253
     8b6:	3f 4f       	sbci	r19, 0xFF	; 255
     8b8:	29 30       	cpi	r18, 0x09	; 9
     8ba:	31 05       	cpc	r19, r1
     8bc:	89 f7       	brne	.-30     	; 0x8a0 <tempDate_str+0xa>
     8be:	08 95       	ret

000008c0 <tempTime_str>:
     8c0:	a6 ec       	ldi	r26, 0xC6	; 198
     8c2:	b1 e0       	ldi	r27, 0x01	; 1
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	4a e0       	ldi	r20, 0x0A	; 10
     8ca:	8d 91       	ld	r24, X+
     8cc:	f9 01       	movw	r30, r18
     8ce:	e0 55       	subi	r30, 0x50	; 80
     8d0:	ff 4f       	sbci	r31, 0xFF	; 255
     8d2:	64 2f       	mov	r22, r20
     8d4:	85 d6       	rcall	.+3338   	; 0x15e0 <__udivmodqi4>
     8d6:	80 5d       	subi	r24, 0xD0	; 208
     8d8:	80 83       	st	Z, r24
     8da:	90 5d       	subi	r25, 0xD0	; 208
     8dc:	91 83       	std	Z+1, r25	; 0x01
     8de:	2d 5f       	subi	r18, 0xFD	; 253
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	29 30       	cpi	r18, 0x09	; 9
     8e4:	31 05       	cpc	r19, r1
     8e6:	89 f7       	brne	.-30     	; 0x8ca <tempTime_str+0xa>
     8e8:	08 95       	ret

000008ea <comp_time>:
     8ea:	e6 ec       	ldi	r30, 0xC6	; 198
     8ec:	f1 e0       	ldi	r31, 0x01	; 1
     8ee:	a9 ec       	ldi	r26, 0xC9	; 201
     8f0:	b1 e0       	ldi	r27, 0x01	; 1
     8f2:	8c 91       	ld	r24, X
     8f4:	80 83       	st	Z, r24
     8f6:	11 96       	adiw	r26, 0x01	; 1
     8f8:	8c 91       	ld	r24, X
     8fa:	11 97       	sbiw	r26, 0x01	; 1
     8fc:	81 83       	std	Z+1, r24	; 0x01
     8fe:	12 96       	adiw	r26, 0x02	; 2
     900:	8c 91       	ld	r24, X
     902:	82 83       	std	Z+2, r24	; 0x02
     904:	08 95       	ret

00000906 <upd_alarm_str>:
     906:	5f 92       	push	r5
     908:	6f 92       	push	r6
     90a:	7f 92       	push	r7
     90c:	8f 92       	push	r8
     90e:	9f 92       	push	r9
     910:	af 92       	push	r10
     912:	bf 92       	push	r11
     914:	cf 92       	push	r12
     916:	df 92       	push	r13
     918:	ef 92       	push	r14
     91a:	ff 92       	push	r15
     91c:	0f 93       	push	r16
     91e:	1f 93       	push	r17
     920:	cf 93       	push	r28
     922:	df 93       	push	r29
     924:	8d ea       	ldi	r24, 0xAD	; 173
     926:	88 2e       	mov	r8, r24
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	98 2e       	mov	r9, r24
     92c:	9a ea       	ldi	r25, 0xAA	; 170
     92e:	a9 2e       	mov	r10, r25
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	b9 2e       	mov	r11, r25
     934:	00 e0       	ldi	r16, 0x00	; 0
     936:	10 e0       	ldi	r17, 0x00	; 0
     938:	c0 e0       	ldi	r28, 0x00	; 0
     93a:	d0 e0       	ldi	r29, 0x00	; 0
     93c:	2a e0       	ldi	r18, 0x0A	; 10
     93e:	52 2e       	mov	r5, r18
     940:	9e 01       	movw	r18, r28
     942:	2d 5f       	subi	r18, 0xFD	; 253
     944:	3f 4f       	sbci	r19, 0xFF	; 255
     946:	69 01       	movw	r12, r18
     948:	c9 01       	movw	r24, r18
     94a:	56 d6       	rcall	.+3244   	; 0x15f8 <eeprom_read_byte>
     94c:	f8 01       	movw	r30, r16
     94e:	ed 55       	subi	r30, 0x5D	; 93
     950:	ff 4f       	sbci	r31, 0xFF	; 255
     952:	7f 01       	movw	r14, r30
     954:	65 2d       	mov	r22, r5
     956:	44 d6       	rcall	.+3208   	; 0x15e0 <__udivmodqi4>
     958:	80 5d       	subi	r24, 0xD0	; 208
     95a:	80 83       	st	Z, r24
     95c:	c6 01       	movw	r24, r12
     95e:	4c d6       	rcall	.+3224   	; 0x15f8 <eeprom_read_byte>
     960:	65 2d       	mov	r22, r5
     962:	3e d6       	rcall	.+3196   	; 0x15e0 <__udivmodqi4>
     964:	90 5d       	subi	r25, 0xD0	; 208
     966:	f7 01       	movw	r30, r14
     968:	91 83       	std	Z+1, r25	; 0x01
     96a:	9e 01       	movw	r18, r28
     96c:	20 50       	subi	r18, 0x00	; 0
     96e:	30 40       	sbci	r19, 0x00	; 0
     970:	79 01       	movw	r14, r18
     972:	c9 01       	movw	r24, r18
     974:	41 d6       	rcall	.+3202   	; 0x15f8 <eeprom_read_byte>
     976:	f8 01       	movw	r30, r16
     978:	e4 56       	subi	r30, 0x64	; 100
     97a:	ff 4f       	sbci	r31, 0xFF	; 255
     97c:	3f 01       	movw	r6, r30
     97e:	65 2d       	mov	r22, r5
     980:	2f d6       	rcall	.+3166   	; 0x15e0 <__udivmodqi4>
     982:	80 5d       	subi	r24, 0xD0	; 208
     984:	80 83       	st	Z, r24
     986:	c7 01       	movw	r24, r14
     988:	37 d6       	rcall	.+3182   	; 0x15f8 <eeprom_read_byte>
     98a:	65 2d       	mov	r22, r5
     98c:	29 d6       	rcall	.+3154   	; 0x15e0 <__udivmodqi4>
     98e:	90 5d       	subi	r25, 0xD0	; 208
     990:	f3 01       	movw	r30, r6
     992:	91 83       	std	Z+1, r25	; 0x01
     994:	c6 01       	movw	r24, r12
     996:	30 d6       	rcall	.+3168   	; 0x15f8 <eeprom_read_byte>
     998:	f4 01       	movw	r30, r8
     99a:	81 93       	st	Z+, r24
     99c:	4f 01       	movw	r8, r30
     99e:	c7 01       	movw	r24, r14
     9a0:	2b d6       	rcall	.+3158   	; 0x15f8 <eeprom_read_byte>
     9a2:	f5 01       	movw	r30, r10
     9a4:	81 93       	st	Z+, r24
     9a6:	5f 01       	movw	r10, r30
     9a8:	0d 5f       	subi	r16, 0xFD	; 253
     9aa:	1f 4f       	sbci	r17, 0xFF	; 255
     9ac:	21 97       	sbiw	r28, 0x01	; 1
     9ae:	19 f0       	breq	.+6      	; 0x9b6 <upd_alarm_str+0xb0>
     9b0:	c1 e0       	ldi	r28, 0x01	; 1
     9b2:	d0 e0       	ldi	r29, 0x00	; 0
     9b4:	c5 cf       	rjmp	.-118    	; 0x940 <upd_alarm_str+0x3a>
     9b6:	df 91       	pop	r29
     9b8:	cf 91       	pop	r28
     9ba:	1f 91       	pop	r17
     9bc:	0f 91       	pop	r16
     9be:	ff 90       	pop	r15
     9c0:	ef 90       	pop	r14
     9c2:	df 90       	pop	r13
     9c4:	cf 90       	pop	r12
     9c6:	bf 90       	pop	r11
     9c8:	af 90       	pop	r10
     9ca:	9f 90       	pop	r9
     9cc:	8f 90       	pop	r8
     9ce:	7f 90       	pop	r7
     9d0:	6f 90       	pop	r6
     9d2:	5f 90       	pop	r5
     9d4:	08 95       	ret

000009d6 <display_time>:
     9d6:	0f 93       	push	r16
     9d8:	1f 93       	push	r17
     9da:	cf 93       	push	r28
     9dc:	09 ec       	ldi	r16, 0xC9	; 201
     9de:	11 e0       	ldi	r17, 0x01	; 1
     9e0:	f8 01       	movw	r30, r16
     9e2:	80 81       	ld	r24, Z
     9e4:	ca e0       	ldi	r28, 0x0A	; 10
     9e6:	6c 2f       	mov	r22, r28
     9e8:	fb d5       	rcall	.+3062   	; 0x15e0 <__udivmodqi4>
     9ea:	46 e0       	ldi	r20, 0x06	; 6
     9ec:	61 e0       	ldi	r22, 0x01	; 1
     9ee:	ba de       	rcall	.-652    	; 0x764 <draw_big_digit>
     9f0:	f8 01       	movw	r30, r16
     9f2:	80 81       	ld	r24, Z
     9f4:	6c 2f       	mov	r22, r28
     9f6:	f4 d5       	rcall	.+3048   	; 0x15e0 <__udivmodqi4>
     9f8:	89 2f       	mov	r24, r25
     9fa:	42 e2       	ldi	r20, 0x22	; 34
     9fc:	61 e0       	ldi	r22, 0x01	; 1
     9fe:	b2 de       	rcall	.-668    	; 0x764 <draw_big_digit>
     a00:	41 e4       	ldi	r20, 0x41	; 65
     a02:	61 e0       	ldi	r22, 0x01	; 1
     a04:	8a e0       	ldi	r24, 0x0A	; 10
     a06:	ae de       	rcall	.-676    	; 0x764 <draw_big_digit>
     a08:	f8 01       	movw	r30, r16
     a0a:	81 81       	ldd	r24, Z+1	; 0x01
     a0c:	6c 2f       	mov	r22, r28
     a0e:	e8 d5       	rcall	.+3024   	; 0x15e0 <__udivmodqi4>
     a10:	46 e4       	ldi	r20, 0x46	; 70
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	a7 de       	rcall	.-690    	; 0x764 <draw_big_digit>
     a16:	f8 01       	movw	r30, r16
     a18:	81 81       	ldd	r24, Z+1	; 0x01
     a1a:	6c 2f       	mov	r22, r28
     a1c:	e1 d5       	rcall	.+3010   	; 0x15e0 <__udivmodqi4>
     a1e:	89 2f       	mov	r24, r25
     a20:	42 e6       	ldi	r20, 0x62	; 98
     a22:	61 e0       	ldi	r22, 0x01	; 1
     a24:	9f de       	rcall	.-706    	; 0x764 <draw_big_digit>
     a26:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
     a2a:	8e 7f       	andi	r24, 0xFE	; 254
     a2c:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <status>
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	08 95       	ret

00000a38 <display_date>:
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	00 d0       	rcall	.+0      	; 0xa3e <display_date+0x6>
     a3e:	00 d0       	rcall	.+0      	; 0xa40 <display_date+0x8>
     a40:	00 d0       	rcall	.+0      	; 0xa42 <display_date+0xa>
     a42:	cd b7       	in	r28, 0x3d	; 61
     a44:	de b7       	in	r29, 0x3e	; 62
     a46:	86 e0       	ldi	r24, 0x06	; 6
     a48:	e4 ec       	ldi	r30, 0xC4	; 196
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	de 01       	movw	r26, r28
     a4e:	11 96       	adiw	r26, 0x01	; 1
     a50:	01 90       	ld	r0, Z+
     a52:	0d 92       	st	X+, r0
     a54:	8a 95       	dec	r24
     a56:	e1 f7       	brne	.-8      	; 0xa50 <display_date+0x18>
     a58:	6a eb       	ldi	r22, 0xBA	; 186
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	ce 01       	movw	r24, r28
     a5e:	01 96       	adiw	r24, 0x01	; 1
     a60:	94 dd       	rcall	.-1240   	; 0x58a <word_out>
     a62:	26 96       	adiw	r28, 0x06	; 6
     a64:	0f b6       	in	r0, 0x3f	; 63
     a66:	f8 94       	cli
     a68:	de bf       	out	0x3e, r29	; 62
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	cd bf       	out	0x3d, r28	; 61
     a6e:	df 91       	pop	r29
     a70:	cf 91       	pop	r28
     a72:	08 95       	ret

00000a74 <cursor_h>:
     a74:	0f 93       	push	r16
     a76:	1f 93       	push	r17
     a78:	cf 93       	push	r28
     a7a:	df 93       	push	r29
     a7c:	00 d0       	rcall	.+0      	; 0xa7e <cursor_h+0xa>
     a7e:	00 d0       	rcall	.+0      	; 0xa80 <cursor_h+0xc>
     a80:	1f 92       	push	r1
     a82:	cd b7       	in	r28, 0x3d	; 61
     a84:	de b7       	in	r29, 0x3e	; 62
     a86:	08 2f       	mov	r16, r24
     a88:	10 91 e1 00 	lds	r17, 0x00E1	; 0x8000e1 <cursor_horiz>
     a8c:	81 30       	cpi	r24, 0x01	; 1
     a8e:	49 f0       	breq	.+18     	; 0xaa2 <cursor_h+0x2e>
     a90:	82 30       	cpi	r24, 0x02	; 2
     a92:	79 f4       	brne	.+30     	; 0xab2 <cursor_h+0x3e>
     a94:	14 30       	cpi	r17, 0x04	; 4
     a96:	10 f4       	brcc	.+4      	; 0xa9c <cursor_h+0x28>
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	06 c0       	rjmp	.+12     	; 0xaa8 <cursor_h+0x34>
     a9c:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <cursor_horiz>
     aa0:	08 c0       	rjmp	.+16     	; 0xab2 <cursor_h+0x3e>
     aa2:	11 23       	and	r17, r17
     aa4:	19 f0       	breq	.+6      	; 0xaac <cursor_h+0x38>
     aa6:	8f ef       	ldi	r24, 0xFF	; 255
     aa8:	81 0f       	add	r24, r17
     aaa:	01 c0       	rjmp	.+2      	; 0xaae <cursor_h+0x3a>
     aac:	84 e0       	ldi	r24, 0x04	; 4
     aae:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <cursor_horiz>
     ab2:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <cursor_horiz>
     ab6:	89 83       	std	Y+1, r24	; 0x01
     ab8:	8a 83       	std	Y+2, r24	; 0x02
     aba:	1b 82       	std	Y+3, r1	; 0x03
     abc:	8a e0       	ldi	r24, 0x0A	; 10
     abe:	8c 83       	std	Y+4, r24	; 0x04
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	8d 83       	std	Y+5, r24	; 0x05
     ac4:	6a ec       	ldi	r22, 0xCA	; 202
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	ce 01       	movw	r24, r28
     aca:	01 96       	adiw	r24, 0x01	; 1
     acc:	5e dd       	rcall	.-1348   	; 0x58a <word_out>
     ace:	00 23       	and	r16, r16
     ad0:	39 f0       	breq	.+14     	; 0xae0 <cursor_h+0x6c>
     ad2:	19 83       	std	Y+1, r17	; 0x01
     ad4:	1a 83       	std	Y+2, r17	; 0x02
     ad6:	6d ec       	ldi	r22, 0xCD	; 205
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	ce 01       	movw	r24, r28
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	55 dd       	rcall	.-1366   	; 0x58a <word_out>
     ae0:	0f 90       	pop	r0
     ae2:	0f 90       	pop	r0
     ae4:	0f 90       	pop	r0
     ae6:	0f 90       	pop	r0
     ae8:	0f 90       	pop	r0
     aea:	df 91       	pop	r29
     aec:	cf 91       	pop	r28
     aee:	1f 91       	pop	r17
     af0:	0f 91       	pop	r16
     af2:	08 95       	ret

00000af4 <check_day_correct>:
     af4:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <date_temp+0x2>
     af8:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
     afc:	90 ff       	sbrs	r25, 0
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <check_day_correct+0x12>
     b00:	98 30       	cpi	r25, 0x08	; 8
     b02:	18 f0       	brcs	.+6      	; 0xb0a <check_day_correct+0x16>
     b04:	0d c0       	rjmp	.+26     	; 0xb20 <check_day_correct+0x2c>
     b06:	98 30       	cpi	r25, 0x08	; 8
     b08:	58 f0       	brcs	.+22     	; 0xb20 <check_day_correct+0x2c>
     b0a:	80 32       	cpi	r24, 0x20	; 32
     b0c:	18 f0       	brcs	.+6      	; 0xb14 <check_day_correct+0x20>
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
     b14:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
     b18:	81 11       	cpse	r24, r1
     b1a:	2a c0       	rjmp	.+84     	; 0xb70 <check_day_correct+0x7c>
     b1c:	8f e1       	ldi	r24, 0x1F	; 31
     b1e:	26 c0       	rjmp	.+76     	; 0xb6c <check_day_correct+0x78>
     b20:	92 30       	cpi	r25, 0x02	; 2
     b22:	d1 f4       	brne	.+52     	; 0xb58 <check_day_correct+0x64>
     b24:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <date_temp+0x3>
     b28:	93 70       	andi	r25, 0x03	; 3
     b2a:	59 f4       	brne	.+22     	; 0xb42 <check_day_correct+0x4e>
     b2c:	8e 31       	cpi	r24, 0x1E	; 30
     b2e:	18 f0       	brcs	.+6      	; 0xb36 <check_day_correct+0x42>
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
     b36:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
     b3a:	81 11       	cpse	r24, r1
     b3c:	19 c0       	rjmp	.+50     	; 0xb70 <check_day_correct+0x7c>
     b3e:	8d e1       	ldi	r24, 0x1D	; 29
     b40:	15 c0       	rjmp	.+42     	; 0xb6c <check_day_correct+0x78>
     b42:	8d 31       	cpi	r24, 0x1D	; 29
     b44:	18 f0       	brcs	.+6      	; 0xb4c <check_day_correct+0x58>
     b46:	81 e0       	ldi	r24, 0x01	; 1
     b48:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
     b4c:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
     b50:	81 11       	cpse	r24, r1
     b52:	0e c0       	rjmp	.+28     	; 0xb70 <check_day_correct+0x7c>
     b54:	8c e1       	ldi	r24, 0x1C	; 28
     b56:	0a c0       	rjmp	.+20     	; 0xb6c <check_day_correct+0x78>
     b58:	8f 31       	cpi	r24, 0x1F	; 31
     b5a:	18 f0       	brcs	.+6      	; 0xb62 <check_day_correct+0x6e>
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
     b62:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
     b66:	81 11       	cpse	r24, r1
     b68:	03 c0       	rjmp	.+6      	; 0xb70 <check_day_correct+0x7c>
     b6a:	8e e1       	ldi	r24, 0x1E	; 30
     b6c:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
     b70:	08 95       	ret

00000b72 <draw_cursor>:
     b72:	0f 93       	push	r16
     b74:	cf 93       	push	r28
     b76:	df 93       	push	r29
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	a9 2f       	mov	r26, r25
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	fa 01       	movw	r30, r20
     b80:	ea 0f       	add	r30, r26
     b82:	fb 1f       	adc	r31, r27
     b84:	30 81       	ld	r19, Z
     b86:	83 17       	cp	r24, r19
     b88:	18 f0       	brcs	.+6      	; 0xb90 <draw_cursor+0x1e>
     b8a:	83 1b       	sub	r24, r19
     b8c:	9f 5f       	subi	r25, 0xFF	; 255
     b8e:	f5 cf       	rjmp	.-22     	; 0xb7a <draw_cursor+0x8>
     b90:	e8 2f       	mov	r30, r24
     b92:	f0 e0       	ldi	r31, 0x00	; 0
     b94:	ee 0f       	add	r30, r30
     b96:	ff 1f       	adc	r31, r31
     b98:	aa 0f       	add	r26, r26
     b9a:	bb 1f       	adc	r27, r27
     b9c:	a6 0f       	add	r26, r22
     b9e:	b7 1f       	adc	r27, r23
     ba0:	30 e0       	ldi	r19, 0x00	; 0
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	43 2f       	mov	r20, r19
     ba6:	50 e0       	ldi	r21, 0x00	; 0
     ba8:	6d 91       	ld	r22, X+
     baa:	7c 91       	ld	r23, X
     bac:	11 97       	sbiw	r26, 0x01	; 1
     bae:	e4 17       	cp	r30, r20
     bb0:	f5 07       	cpc	r31, r21
     bb2:	3c f0       	brlt	.+14     	; 0xbc2 <draw_cursor+0x50>
     bb4:	eb 01       	movw	r28, r22
     bb6:	c4 0f       	add	r28, r20
     bb8:	d5 1f       	adc	r29, r21
     bba:	48 81       	ld	r20, Y
     bbc:	84 0f       	add	r24, r20
     bbe:	3f 5f       	subi	r19, 0xFF	; 255
     bc0:	f1 cf       	rjmp	.-30     	; 0xba4 <draw_cursor+0x32>
     bc2:	99 0f       	add	r25, r25
     bc4:	92 0f       	add	r25, r18
     bc6:	e6 0f       	add	r30, r22
     bc8:	f7 1f       	adc	r31, r23
     bca:	21 81       	ldd	r18, Z+1	; 0x01
     bcc:	49 2f       	mov	r20, r25
     bce:	69 2f       	mov	r22, r25
     bd0:	9f dd       	rcall	.-1218   	; 0x710 <fill_column>
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	0f 91       	pop	r16
     bd8:	08 95       	ret

00000bda <cursor_v>:
     bda:	cf 92       	push	r12
     bdc:	df 92       	push	r13
     bde:	ef 92       	push	r14
     be0:	ff 92       	push	r15
     be2:	0f 93       	push	r16
     be4:	1f 93       	push	r17
     be6:	cf 93       	push	r28
     be8:	df 93       	push	r29
     bea:	eb 01       	movw	r28, r22
     bec:	d4 2e       	mov	r13, r20
     bee:	c2 2e       	mov	r12, r18
     bf0:	78 01       	movw	r14, r16
     bf2:	81 30       	cpi	r24, 0x01	; 1
     bf4:	f1 f4       	brne	.+60     	; 0xc32 <cursor_v+0x58>
     bf6:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
     bfa:	48 2f       	mov	r20, r24
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	21 50       	subi	r18, 0x01	; 1
     c02:	31 09       	sbc	r19, r1
     c04:	00 e0       	ldi	r16, 0x00	; 0
     c06:	42 17       	cp	r20, r18
     c08:	53 07       	cpc	r21, r19
     c0a:	3c f4       	brge	.+14     	; 0xc1a <cursor_v+0x40>
     c0c:	2d 2d       	mov	r18, r13
     c0e:	a7 01       	movw	r20, r14
     c10:	b0 df       	rcall	.-160    	; 0xb72 <draw_cursor>
     c12:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
     c16:	8f 5f       	subi	r24, 0xFF	; 255
     c18:	19 c0       	rjmp	.+50     	; 0xc4c <cursor_v+0x72>
     c1a:	2d 2d       	mov	r18, r13
     c1c:	a7 01       	movw	r20, r14
     c1e:	a9 df       	rcall	.-174    	; 0xb72 <draw_cursor>
     c20:	01 e0       	ldi	r16, 0x01	; 1
     c22:	2d 2d       	mov	r18, r13
     c24:	a7 01       	movw	r20, r14
     c26:	be 01       	movw	r22, r28
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	a3 df       	rcall	.-186    	; 0xb72 <draw_cursor>
     c2c:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <cursor_v_pos>
     c30:	26 c0       	rjmp	.+76     	; 0xc7e <cursor_v+0xa4>
     c32:	88 23       	and	r24, r24
     c34:	f1 f0       	breq	.+60     	; 0xc72 <cursor_v+0x98>
     c36:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
     c3a:	00 e0       	ldi	r16, 0x00	; 0
     c3c:	24 2f       	mov	r18, r20
     c3e:	a7 01       	movw	r20, r14
     c40:	88 23       	and	r24, r24
     c42:	59 f0       	breq	.+22     	; 0xc5a <cursor_v+0x80>
     c44:	96 df       	rcall	.-212    	; 0xb72 <draw_cursor>
     c46:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
     c4a:	81 50       	subi	r24, 0x01	; 1
     c4c:	80 93 df 00 	sts	0x00DF, r24	; 0x8000df <cursor_v_pos>
     c50:	01 e0       	ldi	r16, 0x01	; 1
     c52:	2d 2d       	mov	r18, r13
     c54:	a7 01       	movw	r20, r14
     c56:	be 01       	movw	r22, r28
     c58:	11 c0       	rjmp	.+34     	; 0xc7c <cursor_v+0xa2>
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	8a df       	rcall	.-236    	; 0xb72 <draw_cursor>
     c5e:	ca 94       	dec	r12
     c60:	01 e0       	ldi	r16, 0x01	; 1
     c62:	2d 2d       	mov	r18, r13
     c64:	a7 01       	movw	r20, r14
     c66:	be 01       	movw	r22, r28
     c68:	8c 2d       	mov	r24, r12
     c6a:	83 df       	rcall	.-250    	; 0xb72 <draw_cursor>
     c6c:	c0 92 df 00 	sts	0x00DF, r12	; 0x8000df <cursor_v_pos>
     c70:	06 c0       	rjmp	.+12     	; 0xc7e <cursor_v+0xa4>
     c72:	01 e0       	ldi	r16, 0x01	; 1
     c74:	24 2f       	mov	r18, r20
     c76:	a7 01       	movw	r20, r14
     c78:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
     c7c:	7a df       	rcall	.-268    	; 0xb72 <draw_cursor>
     c7e:	df 91       	pop	r29
     c80:	cf 91       	pop	r28
     c82:	1f 91       	pop	r17
     c84:	0f 91       	pop	r16
     c86:	ff 90       	pop	r15
     c88:	ef 90       	pop	r14
     c8a:	df 90       	pop	r13
     c8c:	cf 90       	pop	r12
     c8e:	08 95       	ret

00000c90 <show_menus>:
     c90:	df 92       	push	r13
     c92:	ef 92       	push	r14
     c94:	ff 92       	push	r15
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	00 d0       	rcall	.+0      	; 0xca0 <show_menus+0x10>
     ca0:	00 d0       	rcall	.+0      	; 0xca2 <show_menus+0x12>
     ca2:	00 d0       	rcall	.+0      	; 0xca4 <show_menus+0x14>
     ca4:	cd b7       	in	r28, 0x3d	; 61
     ca6:	de b7       	in	r29, 0x3e	; 62
     ca8:	99 e3       	ldi	r25, 0x39	; 57
     caa:	e9 2e       	mov	r14, r25
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	f9 2e       	mov	r15, r25
     cb0:	10 e0       	ldi	r17, 0x00	; 0
     cb2:	06 e0       	ldi	r16, 0x06	; 6
     cb4:	0e 0d       	add	r16, r14
     cb6:	c7 01       	movw	r24, r14
     cb8:	9f d4       	rcall	.+2366   	; 0x15f8 <eeprom_read_byte>
     cba:	18 0f       	add	r17, r24
     cbc:	8f ef       	ldi	r24, 0xFF	; 255
     cbe:	e8 1a       	sub	r14, r24
     cc0:	f8 0a       	sbc	r15, r24
     cc2:	0e 11       	cpse	r16, r14
     cc4:	f8 cf       	rjmp	.-16     	; 0xcb6 <show_menus+0x26>
     cc6:	45 e0       	ldi	r20, 0x05	; 5
     cc8:	41 0f       	add	r20, r17
     cca:	6b e5       	ldi	r22, 0x5B	; 91
     ccc:	79 e0       	ldi	r23, 0x09	; 9
     cce:	84 e5       	ldi	r24, 0x54	; 84
     cd0:	c5 da       	rcall	.-2678   	; 0x25c <i2c_read_arr>
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	f1 2c       	mov	r15, r1
     cd8:	8f e7       	ldi	r24, 0x7F	; 127
     cda:	d8 2e       	mov	r13, r24
     cdc:	ee 24       	eor	r14, r14
     cde:	e3 94       	inc	r14
     ce0:	29 83       	std	Y+1, r18	; 0x01
     ce2:	2a 83       	std	Y+2, r18	; 0x02
     ce4:	89 01       	movw	r16, r18
     ce6:	0f 5f       	subi	r16, 0xFF	; 255
     ce8:	1f 4f       	sbci	r17, 0xFF	; 255
     cea:	c8 01       	movw	r24, r16
     cec:	87 5c       	subi	r24, 0xC7	; 199
     cee:	9f 4f       	sbci	r25, 0xFF	; 255
     cf0:	83 d4       	rcall	.+2310   	; 0x15f8 <eeprom_read_byte>
     cf2:	98 2f       	mov	r25, r24
     cf4:	99 0f       	add	r25, r25
     cf6:	98 0f       	add	r25, r24
     cf8:	91 95       	neg	r25
     cfa:	9e 5b       	subi	r25, 0xBE	; 190
     cfc:	9b 83       	std	Y+3, r25	; 0x03
     cfe:	dc 82       	std	Y+4, r13	; 0x04
     d00:	ed 82       	std	Y+5, r14	; 0x05
     d02:	1e 82       	std	Y+6, r1	; 0x06
     d04:	6f 2d       	mov	r22, r15
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	69 51       	subi	r22, 0x19	; 25
     d0a:	7f 4f       	sbci	r23, 0xFF	; 255
     d0c:	ce 01       	movw	r24, r28
     d0e:	01 96       	adiw	r24, 0x01	; 1
     d10:	3c dc       	rcall	.-1928   	; 0x58a <word_out>
     d12:	8f 0d       	add	r24, r15
     d14:	ff 24       	eor	r15, r15
     d16:	f3 94       	inc	r15
     d18:	f8 0e       	add	r15, r24
     d1a:	98 01       	movw	r18, r16
     d1c:	05 30       	cpi	r16, 0x05	; 5
     d1e:	11 05       	cpc	r17, r1
     d20:	f9 f6       	brne	.-66     	; 0xce0 <show_menus+0x50>
     d22:	26 96       	adiw	r28, 0x06	; 6
     d24:	0f b6       	in	r0, 0x3f	; 63
     d26:	f8 94       	cli
     d28:	de bf       	out	0x3e, r29	; 62
     d2a:	0f be       	out	0x3f, r0	; 63
     d2c:	cd bf       	out	0x3d, r28	; 61
     d2e:	df 91       	pop	r29
     d30:	cf 91       	pop	r28
     d32:	1f 91       	pop	r17
     d34:	0f 91       	pop	r16
     d36:	ff 90       	pop	r15
     d38:	ef 90       	pop	r14
     d3a:	df 90       	pop	r13
     d3c:	08 95       	ret

00000d3e <UART_Init>:
     d3e:	10 bc       	out	0x20, r1	; 32
     d40:	8c e0       	ldi	r24, 0x0C	; 12
     d42:	89 b9       	out	0x09, r24	; 9
     d44:	88 e9       	ldi	r24, 0x98	; 152
     d46:	8a b9       	out	0x0a, r24	; 10
     d48:	86 e8       	ldi	r24, 0x86	; 134
     d4a:	80 bd       	out	0x20, r24	; 32
     d4c:	08 95       	ret

00000d4e <show_menu>:
     d4e:	0f 93       	push	r16
     d50:	1f 93       	push	r17
     d52:	cf 93       	push	r28
     d54:	df 93       	push	r29
     d56:	00 d0       	rcall	.+0      	; 0xd58 <show_menu+0xa>
     d58:	00 d0       	rcall	.+0      	; 0xd5a <show_menu+0xc>
     d5a:	1f 92       	push	r1
     d5c:	cd b7       	in	r28, 0x3d	; 61
     d5e:	de b7       	in	r29, 0x3e	; 62
     d60:	a7 db       	rcall	.-2226   	; 0x4b0 <lcd_res>
     d62:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
     d66:	82 32       	cpi	r24, 0x22	; 34
     d68:	78 f4       	brcc	.+30     	; 0xd88 <show_menu+0x3a>
     d6a:	8f 31       	cpi	r24, 0x1F	; 31
     d6c:	f8 f4       	brcc	.+62     	; 0xdac <show_menu+0x5e>
     d6e:	84 30       	cpi	r24, 0x04	; 4
     d70:	09 f4       	brne	.+2      	; 0xd74 <show_menu+0x26>
     d72:	52 c0       	rjmp	.+164    	; 0xe18 <show_menu+0xca>
     d74:	28 f4       	brcc	.+10     	; 0xd80 <show_menu+0x32>
     d76:	82 30       	cpi	r24, 0x02	; 2
     d78:	b1 f0       	breq	.+44     	; 0xda6 <show_menu+0x58>
     d7a:	83 30       	cpi	r24, 0x03	; 3
     d7c:	b9 f0       	breq	.+46     	; 0xdac <show_menu+0x5e>
     d7e:	95 c0       	rjmp	.+298    	; 0xeaa <show_menu+0x15c>
     d80:	85 51       	subi	r24, 0x15	; 21
     d82:	83 30       	cpi	r24, 0x03	; 3
     d84:	80 f0       	brcs	.+32     	; 0xda6 <show_menu+0x58>
     d86:	91 c0       	rjmp	.+290    	; 0xeaa <show_menu+0x15c>
     d88:	86 39       	cpi	r24, 0x96	; 150
     d8a:	40 f4       	brcc	.+16     	; 0xd9c <show_menu+0x4e>
     d8c:	8c 38       	cpi	r24, 0x8C	; 140
     d8e:	08 f0       	brcs	.+2      	; 0xd92 <show_menu+0x44>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <show_menu+0xca>
     d92:	89 52       	subi	r24, 0x29	; 41
     d94:	89 30       	cpi	r24, 0x09	; 9
     d96:	08 f0       	brcs	.+2      	; 0xd9a <show_menu+0x4c>
     d98:	88 c0       	rjmp	.+272    	; 0xeaa <show_menu+0x15c>
     d9a:	3e c0       	rjmp	.+124    	; 0xe18 <show_menu+0xca>
     d9c:	80 5f       	subi	r24, 0xF0	; 240
     d9e:	83 30       	cpi	r24, 0x03	; 3
     da0:	08 f0       	brcs	.+2      	; 0xda4 <show_menu+0x56>
     da2:	83 c0       	rjmp	.+262    	; 0xeaa <show_menu+0x15c>
     da4:	39 c0       	rjmp	.+114    	; 0xe18 <show_menu+0xca>
     da6:	6a eb       	ldi	r22, 0xBA	; 186
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	18 c0       	rjmp	.+48     	; 0xddc <show_menu+0x8e>
     dac:	a9 ec       	ldi	r26, 0xC9	; 201
     dae:	b1 e0       	ldi	r27, 0x01	; 1
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	4a e0       	ldi	r20, 0x0A	; 10
     db6:	8d 91       	ld	r24, X+
     db8:	f9 01       	movw	r30, r18
     dba:	e0 55       	subi	r30, 0x50	; 80
     dbc:	ff 4f       	sbci	r31, 0xFF	; 255
     dbe:	64 2f       	mov	r22, r20
     dc0:	0f d4       	rcall	.+2078   	; 0x15e0 <__udivmodqi4>
     dc2:	80 5d       	subi	r24, 0xD0	; 208
     dc4:	80 83       	st	Z, r24
     dc6:	90 5d       	subi	r25, 0xD0	; 208
     dc8:	91 83       	std	Z+1, r25	; 0x01
     dca:	2d 5f       	subi	r18, 0xFD	; 253
     dcc:	3f 4f       	sbci	r19, 0xFF	; 255
     dce:	29 30       	cpi	r18, 0x09	; 9
     dd0:	31 05       	cpc	r19, r1
     dd2:	89 f7       	brne	.-30     	; 0xdb6 <show_menu+0x68>
     dd4:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <time_str+0x8>
     dd8:	60 eb       	ldi	r22, 0xB0	; 176
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	84 e8       	ldi	r24, 0x84	; 132
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	d4 db       	rcall	.-2136   	; 0x58a <word_out>
     de2:	63 e0       	ldi	r22, 0x03	; 3
     de4:	83 e0       	ldi	r24, 0x03	; 3
     de6:	59 d9       	rcall	.-3406   	; 0x9a <goto_page>
     de8:	6f e7       	ldi	r22, 0x7F	; 127
     dea:	8e e2       	ldi	r24, 0x2E	; 46
     dec:	68 d9       	rcall	.-3376   	; 0xbe <goto_x>
     dee:	62 e0       	ldi	r22, 0x02	; 2
     df0:	89 e2       	ldi	r24, 0x29	; 41
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	8c db       	rcall	.-2280   	; 0x50e <eep_str_write>
     df6:	63 e0       	ldi	r22, 0x03	; 3
     df8:	83 e0       	ldi	r24, 0x03	; 3
     dfa:	4f d9       	rcall	.-3426   	; 0x9a <goto_page>
     dfc:	6f e7       	ldi	r22, 0x7F	; 127
     dfe:	80 e4       	ldi	r24, 0x40	; 64
     e00:	5e d9       	rcall	.-3396   	; 0xbe <goto_x>
     e02:	63 e0       	ldi	r22, 0x03	; 3
     e04:	84 e2       	ldi	r24, 0x24	; 36
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	82 db       	rcall	.-2300   	; 0x50e <eep_str_write>
     e0a:	02 e8       	ldi	r16, 0x82	; 130
     e0c:	10 e0       	ldi	r17, 0x00	; 0
     e0e:	25 e0       	ldi	r18, 0x05	; 5
     e10:	42 e0       	ldi	r20, 0x02	; 2
     e12:	69 e8       	ldi	r22, 0x89	; 137
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	47 c0       	rjmp	.+142    	; 0xea6 <show_menu+0x158>
     e18:	76 dd       	rcall	.-1300   	; 0x906 <upd_alarm_str>
     e1a:	85 e0       	ldi	r24, 0x05	; 5
     e1c:	e0 ed       	ldi	r30, 0xD0	; 208
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	de 01       	movw	r26, r28
     e22:	11 96       	adiw	r26, 0x01	; 1
     e24:	01 90       	ld	r0, Z+
     e26:	0d 92       	st	X+, r0
     e28:	8a 95       	dec	r24
     e2a:	e1 f7       	brne	.-8      	; 0xe24 <show_menu+0xd6>
     e2c:	63 ea       	ldi	r22, 0xA3	; 163
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	ce 01       	movw	r24, r28
     e32:	01 96       	adiw	r24, 0x01	; 1
     e34:	aa db       	rcall	.-2220   	; 0x58a <word_out>
     e36:	84 e0       	ldi	r24, 0x04	; 4
     e38:	89 83       	std	Y+1, r24	; 0x01
     e3a:	8a 83       	std	Y+2, r24	; 0x02
     e3c:	6c e9       	ldi	r22, 0x9C	; 156
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	ce 01       	movw	r24, r28
     e42:	01 96       	adiw	r24, 0x01	; 1
     e44:	a2 db       	rcall	.-2236   	; 0x58a <word_out>
     e46:	19 82       	std	Y+1, r1	; 0x01
     e48:	1a 82       	std	Y+2, r1	; 0x02
     e4a:	66 e0       	ldi	r22, 0x06	; 6
     e4c:	86 e0       	ldi	r24, 0x06	; 6
     e4e:	25 d9       	rcall	.-3510   	; 0x9a <goto_page>
     e50:	6f e7       	ldi	r22, 0x7F	; 127
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	34 d9       	rcall	.-3480   	; 0xbe <goto_x>
     e56:	64 e1       	ldi	r22, 0x14	; 20
     e58:	86 e0       	ldi	r24, 0x06	; 6
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	58 db       	rcall	.-2384   	; 0x50e <eep_str_write>
     e5e:	62 e0       	ldi	r22, 0x02	; 2
     e60:	82 e0       	ldi	r24, 0x02	; 2
     e62:	1b d9       	rcall	.-3530   	; 0x9a <goto_page>
     e64:	6f e7       	ldi	r22, 0x7F	; 127
     e66:	83 e0       	ldi	r24, 0x03	; 3
     e68:	2a d9       	rcall	.-3500   	; 0xbe <goto_x>
     e6a:	64 e1       	ldi	r22, 0x14	; 20
     e6c:	86 e0       	ldi	r24, 0x06	; 6
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	4e db       	rcall	.-2404   	; 0x50e <eep_str_write>
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	80 e0       	ldi	r24, 0x00	; 0
     e76:	11 d9       	rcall	.-3550   	; 0x9a <goto_page>
     e78:	6f e7       	ldi	r22, 0x7F	; 127
     e7a:	8f e3       	ldi	r24, 0x3F	; 63
     e7c:	20 d9       	rcall	.-3520   	; 0xbe <goto_x>
     e7e:	66 e0       	ldi	r22, 0x06	; 6
     e80:	8c e1       	ldi	r24, 0x1C	; 28
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	44 db       	rcall	.-2424   	; 0x50e <eep_str_write>
     e86:	64 e0       	ldi	r22, 0x04	; 4
     e88:	84 e0       	ldi	r24, 0x04	; 4
     e8a:	07 d9       	rcall	.-3570   	; 0x9a <goto_page>
     e8c:	6f e7       	ldi	r22, 0x7F	; 127
     e8e:	8f e3       	ldi	r24, 0x3F	; 63
     e90:	16 d9       	rcall	.-3540   	; 0xbe <goto_x>
     e92:	66 e0       	ldi	r22, 0x06	; 6
     e94:	8c e1       	ldi	r24, 0x1C	; 28
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	3a db       	rcall	.-2444   	; 0x50e <eep_str_write>
     e9a:	00 e6       	ldi	r16, 0x60	; 96
     e9c:	10 e0       	ldi	r17, 0x00	; 0
     e9e:	26 e1       	ldi	r18, 0x16	; 22
     ea0:	41 e0       	ldi	r20, 0x01	; 1
     ea2:	64 e6       	ldi	r22, 0x64	; 100
     ea4:	70 e0       	ldi	r23, 0x00	; 0
     ea6:	80 e0       	ldi	r24, 0x00	; 0
     ea8:	98 de       	rcall	.-720    	; 0xbda <cursor_v>
     eaa:	0f 90       	pop	r0
     eac:	0f 90       	pop	r0
     eae:	0f 90       	pop	r0
     eb0:	0f 90       	pop	r0
     eb2:	0f 90       	pop	r0
     eb4:	df 91       	pop	r29
     eb6:	cf 91       	pop	r28
     eb8:	1f 91       	pop	r17
     eba:	0f 91       	pop	r16
     ebc:	08 95       	ret

00000ebe <up_short>:
     ebe:	0f 93       	push	r16
     ec0:	1f 93       	push	r17
     ec2:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
     ec6:	85 31       	cpi	r24, 0x15	; 21
     ec8:	19 f1       	breq	.+70     	; 0xf10 <up_short+0x52>
     eca:	a8 f4       	brcc	.+42     	; 0xef6 <up_short+0x38>
     ecc:	82 30       	cpi	r24, 0x02	; 2
     ece:	e1 f1       	breq	.+120    	; 0xf48 <up_short+0x8a>
     ed0:	30 f4       	brcc	.+12     	; 0xede <up_short+0x20>
     ed2:	81 30       	cpi	r24, 0x01	; 1
     ed4:	09 f0       	breq	.+2      	; 0xed8 <up_short+0x1a>
     ed6:	62 c0       	rjmp	.+196    	; 0xf9c <up_short+0xde>
     ed8:	81 e0       	ldi	r24, 0x01	; 1
     eda:	cc dd       	rcall	.-1128   	; 0xa74 <cursor_h>
     edc:	5f c0       	rjmp	.+190    	; 0xf9c <up_short+0xde>
     ede:	83 30       	cpi	r24, 0x03	; 3
     ee0:	99 f1       	breq	.+102    	; 0xf48 <up_short+0x8a>
     ee2:	84 30       	cpi	r24, 0x04	; 4
     ee4:	09 f0       	breq	.+2      	; 0xee8 <up_short+0x2a>
     ee6:	5a c0       	rjmp	.+180    	; 0xf9c <up_short+0xde>
     ee8:	00 e6       	ldi	r16, 0x60	; 96
     eea:	10 e0       	ldi	r17, 0x00	; 0
     eec:	26 e1       	ldi	r18, 0x16	; 22
     eee:	41 e0       	ldi	r20, 0x01	; 1
     ef0:	64 e6       	ldi	r22, 0x64	; 100
     ef2:	70 e0       	ldi	r23, 0x00	; 0
     ef4:	51 c0       	rjmp	.+162    	; 0xf98 <up_short+0xda>
     ef6:	8f 31       	cpi	r24, 0x1F	; 31
     ef8:	71 f1       	breq	.+92     	; 0xf56 <up_short+0x98>
     efa:	28 f4       	brcc	.+10     	; 0xf06 <up_short+0x48>
     efc:	86 31       	cpi	r24, 0x16	; 22
     efe:	79 f0       	breq	.+30     	; 0xf1e <up_short+0x60>
     f00:	87 31       	cpi	r24, 0x17	; 23
     f02:	b9 f0       	breq	.+46     	; 0xf32 <up_short+0x74>
     f04:	4b c0       	rjmp	.+150    	; 0xf9c <up_short+0xde>
     f06:	80 32       	cpi	r24, 0x20	; 32
     f08:	89 f1       	breq	.+98     	; 0xf6c <up_short+0xae>
     f0a:	81 32       	cpi	r24, 0x21	; 33
     f0c:	d1 f1       	breq	.+116    	; 0xf82 <up_short+0xc4>
     f0e:	46 c0       	rjmp	.+140    	; 0xf9c <up_short+0xde>
     f10:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
     f14:	8f 5f       	subi	r24, 0xFF	; 255
     f16:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
     f1a:	ec dd       	rcall	.-1064   	; 0xaf4 <check_day_correct>
     f1c:	3f c0       	rjmp	.+126    	; 0xf9c <up_short+0xde>
     f1e:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <date_temp+0x2>
     f22:	8c 30       	cpi	r24, 0x0C	; 12
     f24:	10 f4       	brcc	.+4      	; 0xf2a <up_short+0x6c>
     f26:	8f 5f       	subi	r24, 0xFF	; 255
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <up_short+0x6e>
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <date_temp+0x2>
     f30:	35 c0       	rjmp	.+106    	; 0xf9c <up_short+0xde>
     f32:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <date_temp+0x3>
     f36:	83 36       	cpi	r24, 0x63	; 99
     f38:	20 f4       	brcc	.+8      	; 0xf42 <up_short+0x84>
     f3a:	8f 5f       	subi	r24, 0xFF	; 255
     f3c:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <date_temp+0x3>
     f40:	2d c0       	rjmp	.+90     	; 0xf9c <up_short+0xde>
     f42:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <date_temp+0x3>
     f46:	2a c0       	rjmp	.+84     	; 0xf9c <up_short+0xde>
     f48:	02 e8       	ldi	r16, 0x82	; 130
     f4a:	10 e0       	ldi	r17, 0x00	; 0
     f4c:	25 e0       	ldi	r18, 0x05	; 5
     f4e:	42 e0       	ldi	r20, 0x02	; 2
     f50:	69 e8       	ldi	r22, 0x89	; 137
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	21 c0       	rjmp	.+66     	; 0xf98 <up_short+0xda>
     f56:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <time_temp>
     f5a:	87 31       	cpi	r24, 0x17	; 23
     f5c:	20 f4       	brcc	.+8      	; 0xf66 <up_short+0xa8>
     f5e:	8f 5f       	subi	r24, 0xFF	; 255
     f60:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <time_temp>
     f64:	1b c0       	rjmp	.+54     	; 0xf9c <up_short+0xde>
     f66:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <time_temp>
     f6a:	18 c0       	rjmp	.+48     	; 0xf9c <up_short+0xde>
     f6c:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <time_temp+0x1>
     f70:	8b 33       	cpi	r24, 0x3B	; 59
     f72:	20 f4       	brcc	.+8      	; 0xf7c <up_short+0xbe>
     f74:	8f 5f       	subi	r24, 0xFF	; 255
     f76:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <time_temp+0x1>
     f7a:	10 c0       	rjmp	.+32     	; 0xf9c <up_short+0xde>
     f7c:	10 92 c7 01 	sts	0x01C7, r1	; 0x8001c7 <time_temp+0x1>
     f80:	0d c0       	rjmp	.+26     	; 0xf9c <up_short+0xde>
     f82:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <time_temp+0x2>
     f86:	8b 33       	cpi	r24, 0x3B	; 59
     f88:	20 f4       	brcc	.+8      	; 0xf92 <up_short+0xd4>
     f8a:	8f 5f       	subi	r24, 0xFF	; 255
     f8c:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <time_temp+0x2>
     f90:	05 c0       	rjmp	.+10     	; 0xf9c <up_short+0xde>
     f92:	10 92 c8 01 	sts	0x01C8, r1	; 0x8001c8 <time_temp+0x2>
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <up_short+0xde>
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	1f de       	rcall	.-962    	; 0xbda <cursor_v>
     f9c:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
     fa0:	84 51       	subi	r24, 0x14	; 20
     fa2:	8a 30       	cpi	r24, 0x0A	; 10
     fa4:	70 f4       	brcc	.+28     	; 0xfc2 <up_short+0x104>
     fa6:	77 dc       	rcall	.-1810   	; 0x896 <tempDate_str>
     fa8:	6a eb       	ldi	r22, 0xBA	; 186
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	84 e8       	ldi	r24, 0x84	; 132
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	ec da       	rcall	.-2600   	; 0x58a <word_out>
     fb2:	02 e8       	ldi	r16, 0x82	; 130
     fb4:	10 e0       	ldi	r17, 0x00	; 0
     fb6:	25 e0       	ldi	r18, 0x05	; 5
     fb8:	42 e0       	ldi	r20, 0x02	; 2
     fba:	69 e8       	ldi	r22, 0x89	; 137
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	80 e0       	ldi	r24, 0x00	; 0
     fc0:	0c de       	rcall	.-1000   	; 0xbda <cursor_v>
     fc2:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
     fc6:	8e 51       	subi	r24, 0x1E	; 30
     fc8:	8a 30       	cpi	r24, 0x0A	; 10
     fca:	70 f4       	brcc	.+28     	; 0xfe8 <up_short+0x12a>
     fcc:	79 dc       	rcall	.-1806   	; 0x8c0 <tempTime_str>
     fce:	60 eb       	ldi	r22, 0xB0	; 176
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	84 e8       	ldi	r24, 0x84	; 132
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	d9 da       	rcall	.-2638   	; 0x58a <word_out>
     fd8:	02 e8       	ldi	r16, 0x82	; 130
     fda:	10 e0       	ldi	r17, 0x00	; 0
     fdc:	25 e0       	ldi	r18, 0x05	; 5
     fde:	42 e0       	ldi	r20, 0x02	; 2
     fe0:	69 e8       	ldi	r22, 0x89	; 137
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	f9 dd       	rcall	.-1038   	; 0xbda <cursor_v>
     fe8:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
     fec:	2a e0       	ldi	r18, 0x0A	; 10
     fee:	62 2f       	mov	r22, r18
     ff0:	f7 d2       	rcall	.+1518   	; 0x15e0 <__udivmodqi4>
     ff2:	f6 d2       	rcall	.+1516   	; 0x15e0 <__udivmodqi4>
     ff4:	94 30       	cpi	r25, 0x04	; 4
     ff6:	69 f4       	brne	.+26     	; 0x1012 <up_short+0x154>
     ff8:	60 eb       	ldi	r22, 0xB0	; 176
     ffa:	70 e0       	ldi	r23, 0x00	; 0
     ffc:	84 e8       	ldi	r24, 0x84	; 132
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	c4 da       	rcall	.-2680   	; 0x58a <word_out>
    1002:	00 e6       	ldi	r16, 0x60	; 96
    1004:	10 e0       	ldi	r17, 0x00	; 0
    1006:	26 e1       	ldi	r18, 0x16	; 22
    1008:	41 e0       	ldi	r20, 0x01	; 1
    100a:	69 e8       	ldi	r22, 0x89	; 137
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	e4 dd       	rcall	.-1080   	; 0xbda <cursor_v>
    1012:	1f 91       	pop	r17
    1014:	0f 91       	pop	r16
    1016:	08 95       	ret

00001018 <up_button>:
    1018:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <statef>
    101c:	83 99       	sbic	0x10, 3	; 16
    101e:	15 c0       	rjmp	.+42     	; 0x104a <up_button+0x32>
    1020:	98 2f       	mov	r25, r24
    1022:	90 61       	ori	r25, 0x10	; 16
    1024:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <statef>
    1028:	85 fd       	sbrc	r24, 5
    102a:	07 c0       	rjmp	.+14     	; 0x103a <up_button+0x22>
    102c:	9a e0       	ldi	r25, 0x0A	; 10
    102e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <bt_wait_sel_u>
    1032:	80 63       	ori	r24, 0x30	; 48
    1034:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <statef>
    1038:	08 95       	ret
    103a:	80 91 99 00 	lds	r24, 0x0099	; 0x800099 <bt_wait_sel_u>
    103e:	88 23       	and	r24, r24
    1040:	71 f0       	breq	.+28     	; 0x105e <up_button+0x46>
    1042:	81 50       	subi	r24, 0x01	; 1
    1044:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <bt_wait_sel_u>
    1048:	08 95       	ret
    104a:	84 ff       	sbrs	r24, 4
    104c:	08 c0       	rjmp	.+16     	; 0x105e <up_button+0x46>
    104e:	8f 7c       	andi	r24, 0xCF	; 207
    1050:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <statef>
    1054:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <bt_wait_sel_d>
    1058:	86 30       	cpi	r24, 0x06	; 6
    105a:	08 f0       	brcs	.+2      	; 0x105e <up_button+0x46>
    105c:	30 cf       	rjmp	.-416    	; 0xebe <up_short>
    105e:	08 95       	ret

00001060 <dn_short>:

}
void dn_short(){
    1060:	0f 93       	push	r16
    1062:	1f 93       	push	r17
		//uint8_t param[] = {1, 1, 127 / 2 - 7 * 3, 127, 0};
	switch(menu){
    1064:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    1068:	85 31       	cpi	r24, 0x15	; 21
    106a:	61 f1       	breq	.+88     	; 0x10c4 <dn_short+0x64>
    106c:	a8 f4       	brcc	.+42     	; 0x1098 <dn_short+0x38>
    106e:	82 30       	cpi	r24, 0x02	; 2
    1070:	01 f1       	breq	.+64     	; 0x10b2 <dn_short+0x52>
    1072:	30 f4       	brcc	.+12     	; 0x1080 <dn_short+0x20>
    1074:	81 30       	cpi	r24, 0x01	; 1
    1076:	09 f0       	breq	.+2      	; 0x107a <dn_short+0x1a>
    1078:	5d c0       	rjmp	.+186    	; 0x1134 <dn_short+0xd4>
		case 1:
			cursor_h(2);
    107a:	82 e0       	ldi	r24, 0x02	; 2
    107c:	fb dc       	rcall	.-1546   	; 0xa74 <cursor_h>
		break;
    107e:	5a c0       	rjmp	.+180    	; 0x1134 <dn_short+0xd4>
void dn_long(){

}
void dn_short(){
		//uint8_t param[] = {1, 1, 127 / 2 - 7 * 3, 127, 0};
	switch(menu){
    1080:	83 30       	cpi	r24, 0x03	; 3
    1082:	b9 f0       	breq	.+46     	; 0x10b2 <dn_short+0x52>
    1084:	84 30       	cpi	r24, 0x04	; 4
    1086:	09 f0       	breq	.+2      	; 0x108a <dn_short+0x2a>
    1088:	55 c0       	rjmp	.+170    	; 0x1134 <dn_short+0xd4>
		break;
		case 3:
			cursor_v(2, lines, 2, DATE_TIME_MENU_LINE1_LEN + DATE_TIME_MENU_LINE2_LEN, date_time_menu_line_lengths);
		break;
		case 4:
			cursor_v(2, alarm_lines, 1, 2 * (ALARM_MENU_LINE1_3_LEN + ALARM_MENU_LINE2_4_LEN), alarm_menu_line_lengths);
    108a:	00 e6       	ldi	r16, 0x60	; 96
    108c:	10 e0       	ldi	r17, 0x00	; 0
    108e:	26 e1       	ldi	r18, 0x16	; 22
    1090:	41 e0       	ldi	r20, 0x01	; 1
    1092:	64 e6       	ldi	r22, 0x64	; 100
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	13 c0       	rjmp	.+38     	; 0x10be <dn_short+0x5e>
void dn_long(){

}
void dn_short(){
		//uint8_t param[] = {1, 1, 127 / 2 - 7 * 3, 127, 0};
	switch(menu){
    1098:	8f 31       	cpi	r24, 0x1F	; 31
    109a:	79 f1       	breq	.+94     	; 0x10fa <dn_short+0x9a>
    109c:	28 f4       	brcc	.+10     	; 0x10a8 <dn_short+0x48>
    109e:	86 31       	cpi	r24, 0x16	; 22
    10a0:	c1 f0       	breq	.+48     	; 0x10d2 <dn_short+0x72>
    10a2:	87 31       	cpi	r24, 0x17	; 23
    10a4:	01 f1       	breq	.+64     	; 0x10e6 <dn_short+0x86>
    10a6:	46 c0       	rjmp	.+140    	; 0x1134 <dn_short+0xd4>
    10a8:	80 32       	cpi	r24, 0x20	; 32
    10aa:	89 f1       	breq	.+98     	; 0x110e <dn_short+0xae>
    10ac:	81 32       	cpi	r24, 0x21	; 33
    10ae:	c9 f1       	breq	.+114    	; 0x1122 <dn_short+0xc2>
    10b0:	41 c0       	rjmp	.+130    	; 0x1134 <dn_short+0xd4>
		break;
		case 2:
			cursor_v(2, lines, 2, DATE_TIME_MENU_LINE1_LEN + DATE_TIME_MENU_LINE2_LEN, date_time_menu_line_lengths);
		break;
		case 3:
			cursor_v(2, lines, 2, DATE_TIME_MENU_LINE1_LEN + DATE_TIME_MENU_LINE2_LEN, date_time_menu_line_lengths);
    10b2:	02 e8       	ldi	r16, 0x82	; 130
    10b4:	10 e0       	ldi	r17, 0x00	; 0
    10b6:	25 e0       	ldi	r18, 0x05	; 5
    10b8:	42 e0       	ldi	r20, 0x02	; 2
    10ba:	69 e8       	ldi	r22, 0x89	; 137
    10bc:	70 e0       	ldi	r23, 0x00	; 0
		break;
		case 4:
			cursor_v(2, alarm_lines, 1, 2 * (ALARM_MENU_LINE1_3_LEN + ALARM_MENU_LINE2_4_LEN), alarm_menu_line_lengths);
    10be:	82 e0       	ldi	r24, 0x02	; 2
    10c0:	8c dd       	rcall	.-1256   	; 0xbda <cursor_v>
		break;
    10c2:	38 c0       	rjmp	.+112    	; 0x1134 <dn_short+0xd4>
		case 21:
			date_temp[1]--;
    10c4:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <date_temp+0x1>
    10c8:	81 50       	subi	r24, 0x01	; 1
    10ca:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <date_temp+0x1>
			check_day_correct();
    10ce:	12 dd       	rcall	.-1500   	; 0xaf4 <check_day_correct>
			//date_str[0] = date_temp[1] / 10 + '0';
			//date_str[1] = date_temp[1] % 10 + '0';
		break;
    10d0:	31 c0       	rjmp	.+98     	; 0x1134 <dn_short+0xd4>
		case 22:
			if (date_temp[2] > 1)
    10d2:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <date_temp+0x2>
    10d6:	82 30       	cpi	r24, 0x02	; 2
    10d8:	10 f0       	brcs	.+4      	; 0x10de <dn_short+0x7e>
				date_temp[2]--;
    10da:	81 50       	subi	r24, 0x01	; 1
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <dn_short+0x80>
			else
				date_temp[2] = 12;
    10de:	8c e0       	ldi	r24, 0x0C	; 12
    10e0:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <date_temp+0x2>
    10e4:	27 c0       	rjmp	.+78     	; 0x1134 <dn_short+0xd4>
			//date_str[3] = date_temp[2] / 10 + '0';
			//date_str[4] = date_temp[2] % 10 + '0';
		break;
		case 23:
			if (date_temp[3] > 0)
    10e6:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <date_temp+0x3>
    10ea:	88 23       	and	r24, r24
    10ec:	11 f0       	breq	.+4      	; 0x10f2 <dn_short+0x92>
				date_temp[3]--;
    10ee:	81 50       	subi	r24, 0x01	; 1
    10f0:	01 c0       	rjmp	.+2      	; 0x10f4 <dn_short+0x94>
			else
				date_temp[3] = 99;
    10f2:	83 e6       	ldi	r24, 0x63	; 99
    10f4:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <date_temp+0x3>
    10f8:	1d c0       	rjmp	.+58     	; 0x1134 <dn_short+0xd4>
			//date_str[6] = date_temp[3] / 10 + '0';
			//date_str[7] = date_temp[3] % 10 + '0';
		break;
		case 31:
			if (time_temp[0] > 0)
    10fa:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <time_temp>
    10fe:	88 23       	and	r24, r24
    1100:	21 f0       	breq	.+8      	; 0x110a <dn_short+0xaa>
				time_temp[0]--;
    1102:	81 50       	subi	r24, 0x01	; 1
    1104:	80 93 c6 01 	sts	0x01C6, r24	; 0x8001c6 <time_temp>
    1108:	15 c0       	rjmp	.+42     	; 0x1134 <dn_short+0xd4>
			else
				time_temp[2] = 23;
    110a:	87 e1       	ldi	r24, 0x17	; 23
    110c:	11 c0       	rjmp	.+34     	; 0x1130 <dn_short+0xd0>
			//time_str[0] = time_temp[0] / 10 + '0';
			//time_str[1] = time_temp[0] % 10 + '0';
		break;
		case 32:
			if (time_temp[1] > 0)
    110e:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <time_temp+0x1>
    1112:	88 23       	and	r24, r24
    1114:	11 f0       	breq	.+4      	; 0x111a <dn_short+0xba>
				time_temp[1]--;
    1116:	81 50       	subi	r24, 0x01	; 1
    1118:	01 c0       	rjmp	.+2      	; 0x111c <dn_short+0xbc>
			else
				time_temp[1] = 59;
    111a:	8b e3       	ldi	r24, 0x3B	; 59
    111c:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <time_temp+0x1>
    1120:	09 c0       	rjmp	.+18     	; 0x1134 <dn_short+0xd4>
			//time_str[3] = time_temp[1] / 10 + '0';
			//time_str[4] = time_temp[1] % 10 + '0';
		break;
		case 33:
			if (time_temp[2] > 0)
    1122:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <time_temp+0x2>
    1126:	88 23       	and	r24, r24
    1128:	11 f0       	breq	.+4      	; 0x112e <dn_short+0xce>
				time_temp[2]--;
    112a:	81 50       	subi	r24, 0x01	; 1
    112c:	01 c0       	rjmp	.+2      	; 0x1130 <dn_short+0xd0>
			else
				time_temp[2] = 59;
    112e:	8b e3       	ldi	r24, 0x3B	; 59
    1130:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <time_temp+0x2>
			//time_str[6] = time_temp[2] / 10 + '0';
			//time_str[7] = time_temp[2] % 10 + '0';
		break;
	}
	if (menu / 10 == 2){
    1134:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    1138:	84 51       	subi	r24, 0x14	; 20
    113a:	8a 30       	cpi	r24, 0x0A	; 10
    113c:	70 f4       	brcc	.+28     	; 0x115a <dn_short+0xfa>
		tempDate_str();
    113e:	ab db       	rcall	.-2218   	; 0x896 <tempDate_str>
		word_out(param, date_str);
    1140:	6a eb       	ldi	r22, 0xBA	; 186
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	84 e8       	ldi	r24, 0x84	; 132
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	20 da       	rcall	.-3008   	; 0x58a <word_out>
		cursor_v(0, lines, 2, DATE_TIME_MENU_LINE1_LEN + DATE_TIME_MENU_LINE2_LEN, date_time_menu_line_lengths);
    114a:	02 e8       	ldi	r16, 0x82	; 130
    114c:	10 e0       	ldi	r17, 0x00	; 0
    114e:	25 e0       	ldi	r18, 0x05	; 5
    1150:	42 e0       	ldi	r20, 0x02	; 2
    1152:	69 e8       	ldi	r22, 0x89	; 137
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	40 dd       	rcall	.-1408   	; 0xbda <cursor_v>
	}
	if (menu / 10 == 3){
    115a:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    115e:	8e 51       	subi	r24, 0x1E	; 30
    1160:	8a 30       	cpi	r24, 0x0A	; 10
    1162:	70 f4       	brcc	.+28     	; 0x1180 <dn_short+0x120>
		tempTime_str();
    1164:	ad db       	rcall	.-2214   	; 0x8c0 <tempTime_str>
		word_out(param, time_str);
    1166:	60 eb       	ldi	r22, 0xB0	; 176
    1168:	70 e0       	ldi	r23, 0x00	; 0
    116a:	84 e8       	ldi	r24, 0x84	; 132
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	0d da       	rcall	.-3046   	; 0x58a <word_out>
		cursor_v(0, lines, 2, DATE_TIME_MENU_LINE1_LEN + DATE_TIME_MENU_LINE2_LEN, date_time_menu_line_lengths);
    1170:	02 e8       	ldi	r16, 0x82	; 130
    1172:	10 e0       	ldi	r17, 0x00	; 0
    1174:	25 e0       	ldi	r18, 0x05	; 5
    1176:	42 e0       	ldi	r20, 0x02	; 2
    1178:	69 e8       	ldi	r22, 0x89	; 137
    117a:	70 e0       	ldi	r23, 0x00	; 0
    117c:	80 e0       	ldi	r24, 0x00	; 0
    117e:	2d dd       	rcall	.-1446   	; 0xbda <cursor_v>
	}
	if (menu / 10 % 10 == 4){
    1180:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    1184:	2a e0       	ldi	r18, 0x0A	; 10
    1186:	62 2f       	mov	r22, r18
    1188:	2b d2       	rcall	.+1110   	; 0x15e0 <__udivmodqi4>
    118a:	2a d2       	rcall	.+1108   	; 0x15e0 <__udivmodqi4>
    118c:	94 30       	cpi	r25, 0x04	; 4
    118e:	69 f4       	brne	.+26     	; 0x11aa <dn_short+0x14a>
		word_out(param, time_str);
    1190:	60 eb       	ldi	r22, 0xB0	; 176
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	84 e8       	ldi	r24, 0x84	; 132
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	f8 d9       	rcall	.-3088   	; 0x58a <word_out>
		cursor_v(0, alarm_lines, 1, 2 * (ALARM_MENU_LINE1_3_LEN + ALARM_MENU_LINE2_4_LEN), alarm_menu_line_lengths);
    119a:	00 e6       	ldi	r16, 0x60	; 96
    119c:	10 e0       	ldi	r17, 0x00	; 0
    119e:	26 e1       	ldi	r18, 0x16	; 22
    11a0:	41 e0       	ldi	r20, 0x01	; 1
    11a2:	64 e6       	ldi	r22, 0x64	; 100
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	18 dd       	rcall	.-1488   	; 0xbda <cursor_v>
	}
}
    11aa:	1f 91       	pop	r17
    11ac:	0f 91       	pop	r16
    11ae:	08 95       	ret

000011b0 <dn_button>:
void dn_button(){
    11b0:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <statef>
		if (!(PIND & 4)){
    11b4:	82 99       	sbic	0x10, 2	; 16
    11b6:	15 c0       	rjmp	.+42     	; 0x11e2 <dn_button+0x32>
			statef |= 0x40;
    11b8:	98 2f       	mov	r25, r24
    11ba:	90 64       	ori	r25, 0x40	; 64
    11bc:	90 93 d8 00 	sts	0x00D8, r25	; 0x8000d8 <statef>
			if (!(statef & 0x80)){
    11c0:	97 fd       	sbrc	r25, 7
    11c2:	07 c0       	rjmp	.+14     	; 0x11d2 <dn_button+0x22>
				bt_wait_sel_d = WAIT;
    11c4:	9a e0       	ldi	r25, 0x0A	; 10
    11c6:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <bt_wait_sel_d>
				statef |= 0x80;
    11ca:	80 6c       	ori	r24, 0xC0	; 192
    11cc:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <statef>
    11d0:	08 95       	ret
				} else 
					if(bt_wait_sel_d > 0)
    11d2:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <bt_wait_sel_d>
    11d6:	88 23       	and	r24, r24
    11d8:	71 f0       	breq	.+28     	; 0x11f6 <dn_button+0x46>
						bt_wait_sel_d--;
    11da:	81 50       	subi	r24, 0x01	; 1
    11dc:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <bt_wait_sel_d>
    11e0:	08 95       	ret
		} else {
			if (statef & 0x40){
    11e2:	86 ff       	sbrs	r24, 6
    11e4:	08 c0       	rjmp	.+16     	; 0x11f6 <dn_button+0x46>
				statef &= ~0xD0;
    11e6:	8f 72       	andi	r24, 0x2F	; 47
    11e8:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <statef>
				if(bt_wait_sel_d > WAIT / 2)
    11ec:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <bt_wait_sel_d>
    11f0:	86 30       	cpi	r24, 0x06	; 6
    11f2:	08 f0       	brcs	.+2      	; 0x11f6 <dn_button+0x46>
					dn_short();
    11f4:	35 cf       	rjmp	.-406    	; 0x1060 <dn_short>
    11f6:	08 95       	ret

000011f8 <apply_changes>:
			}
		}
}
void apply_changes(){
	switch (menu){
    11f8:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    11fc:	89 31       	cpi	r24, 0x19	; 25
    11fe:	a9 f0       	breq	.+42     	; 0x122a <apply_changes+0x32>
    1200:	18 f4       	brcc	.+6      	; 0x1208 <apply_changes+0x10>
    1202:	88 31       	cpi	r24, 0x18	; 24
    1204:	31 f0       	breq	.+12     	; 0x1212 <apply_changes+0x1a>
    1206:	08 95       	ret
    1208:	82 32       	cpi	r24, 0x22	; 34
    120a:	91 f0       	breq	.+36     	; 0x1230 <apply_changes+0x38>
    120c:	83 32       	cpi	r24, 0x23	; 35
    120e:	e1 f0       	breq	.+56     	; 0x1248 <apply_changes+0x50>
    1210:	08 95       	ret
		case 24:
			ds3231_write_date(date_temp[0], date_temp[1], date_temp[2], date_temp[3]);
    1212:	20 91 cf 01 	lds	r18, 0x01CF	; 0x8001cf <date_temp+0x3>
    1216:	40 91 ce 01 	lds	r20, 0x01CE	; 0x8001ce <date_temp+0x2>
    121a:	60 91 cd 01 	lds	r22, 0x01CD	; 0x8001cd <date_temp+0x1>
    121e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <date_temp>
    1222:	1a d9       	rcall	.-3532   	; 0x458 <ds3231_write_date>
			ds3231_read_date();
    1224:	d3 d8       	rcall	.-3674   	; 0x3cc <ds3231_read_date>
			menu = 2;
    1226:	82 e0       	ldi	r24, 0x02	; 2
    1228:	0c c0       	rjmp	.+24     	; 0x1242 <apply_changes+0x4a>
		break;
		case 25:
			comp_date();
    122a:	23 db       	rcall	.-2490   	; 0x872 <comp_date>
			menu = 2;
    122c:	82 e0       	ldi	r24, 0x02	; 2
    122e:	0e c0       	rjmp	.+28     	; 0x124c <apply_changes+0x54>
			lcd_res();
			show_menu();
		break;
		case 34:
			ds3231_write_time(time_temp[0], time_temp[1], time_temp[2]);
    1230:	40 91 c8 01 	lds	r20, 0x01C8	; 0x8001c8 <time_temp+0x2>
    1234:	60 91 c7 01 	lds	r22, 0x01C7	; 0x8001c7 <time_temp+0x1>
    1238:	80 91 c6 01 	lds	r24, 0x01C6	; 0x8001c6 <time_temp>
    123c:	a4 d8       	rcall	.-3768   	; 0x386 <ds3231_write_time>
			ds3231_read_time();
    123e:	6f d8       	rcall	.-3874   	; 0x31e <ds3231_read_time>
			menu = 3;
    1240:	83 e0       	ldi	r24, 0x03	; 3
    1242:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
		break;
    1246:	08 95       	ret
		case 35:
			comp_time();
    1248:	50 db       	rcall	.-2400   	; 0x8ea <comp_time>
			menu = 3;
    124a:	83 e0       	ldi	r24, 0x03	; 3
    124c:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
			lcd_res();
    1250:	2f d9       	rcall	.-3490   	; 0x4b0 <lcd_res>
			show_menu();
    1252:	7d cd       	rjmp	.-1286   	; 0xd4e <show_menu>

00001254 <ok_short>:
		break;
	}
}
uint8_t prev_menu = 0;
void ok_short(){
	switch(menu){
    1254:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    1258:	82 32       	cpi	r24, 0x22	; 34
    125a:	98 f4       	brcc	.+38     	; 0x1282 <ok_short+0x2e>
    125c:	8f 31       	cpi	r24, 0x1F	; 31
    125e:	08 f0       	brcs	.+2      	; 0x1262 <ok_short+0xe>
    1260:	47 c0       	rjmp	.+142    	; 0x12f0 <ok_short+0x9c>
    1262:	83 30       	cpi	r24, 0x03	; 3
    1264:	c9 f1       	breq	.+114    	; 0x12d8 <ok_short+0x84>
    1266:	20 f4       	brcc	.+8      	; 0x1270 <ok_short+0x1c>
    1268:	81 30       	cpi	r24, 0x01	; 1
    126a:	11 f1       	breq	.+68     	; 0x12b0 <ok_short+0x5c>
    126c:	b0 f0       	brcs	.+44     	; 0x129a <ok_short+0x46>
    126e:	2b c0       	rjmp	.+86     	; 0x12c6 <ok_short+0x72>
    1270:	84 30       	cpi	r24, 0x04	; 4
    1272:	09 f4       	brne	.+2      	; 0x1276 <ok_short+0x22>
    1274:	3f c0       	rjmp	.+126    	; 0x12f4 <ok_short+0xa0>
    1276:	85 51       	subi	r24, 0x15	; 21
    1278:	83 30       	cpi	r24, 0x03	; 3
    127a:	08 f0       	brcs	.+2      	; 0x127e <ok_short+0x2a>
    127c:	47 c0       	rjmp	.+142    	; 0x130c <ok_short+0xb8>
			apply_changes();
		break;
		case 21:
		case 22:
		case 23:
			menu = 2;
    127e:	82 e0       	ldi	r24, 0x02	; 2
    1280:	43 c0       	rjmp	.+134    	; 0x1308 <ok_short+0xb4>
		break;
	}
}
uint8_t prev_menu = 0;
void ok_short(){
	switch(menu){
    1282:	86 39       	cpi	r24, 0x96	; 150
    1284:	30 f4       	brcc	.+12     	; 0x1292 <ok_short+0x3e>
    1286:	8c 38       	cpi	r24, 0x8C	; 140
    1288:	f0 f5       	brcc	.+124    	; 0x1306 <ok_short+0xb2>
    128a:	89 52       	subi	r24, 0x29	; 41
    128c:	89 30       	cpi	r24, 0x09	; 9
    128e:	d8 f1       	brcs	.+118    	; 0x1306 <ok_short+0xb2>
    1290:	3d c0       	rjmp	.+122    	; 0x130c <ok_short+0xb8>
    1292:	80 5f       	subi	r24, 0xF0	; 240
    1294:	83 30       	cpi	r24, 0x03	; 3
    1296:	b8 f1       	brcs	.+110    	; 0x1306 <ok_short+0xb2>
    1298:	39 c0       	rjmp	.+114    	; 0x130c <ok_short+0xb8>
		case 0:
			if(!delay)
    129a:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <delay>
    129e:	81 11       	cpse	r24, r1
    12a0:	01 c0       	rjmp	.+2      	; 0x12a4 <ok_short+0x50>
				lcd_res();
    12a2:	06 d9       	rcall	.-3572   	; 0x4b0 <lcd_res>
			delay = DEL;
    12a4:	8e e1       	ldi	r24, 0x1E	; 30
    12a6:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <delay>
			display_time();
    12aa:	95 db       	rcall	.-2262   	; 0x9d6 <display_time>
			display_date();
    12ac:	c5 db       	rcall	.-2166   	; 0xa38 <display_date>
		break;
    12ae:	2e c0       	rjmp	.+92     	; 0x130c <ok_short+0xb8>
		case 1:
			menu = cursor_horiz + 2;
    12b0:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <cursor_horiz>
    12b4:	8e 5f       	subi	r24, 0xFE	; 254
    12b6:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
			show_menu();
    12ba:	49 dd       	rcall	.-1390   	; 0xd4e <show_menu>
			cursor_horiz = 0;
    12bc:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <cursor_horiz>
			cursor_v_pos = 0;
    12c0:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <cursor_v_pos>
		break;
    12c4:	23 c0       	rjmp	.+70     	; 0x130c <ok_short+0xb8>
		case 2:
			if (prev_menu == 1)
    12c6:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <prev_menu>
    12ca:	81 30       	cpi	r24, 0x01	; 1
    12cc:	09 f4       	brne	.+2      	; 0x12d0 <ok_short+0x7c>
				comp_date();
    12ce:	d1 da       	rcall	.-2654   	; 0x872 <comp_date>
			menu = 21 + cursor_v_pos;
    12d0:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
    12d4:	8b 5e       	subi	r24, 0xEB	; 235
    12d6:	08 c0       	rjmp	.+16     	; 0x12e8 <ok_short+0x94>
			apply_changes();
		break;
		case 3:
			if (prev_menu == 1)
    12d8:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <prev_menu>
    12dc:	81 30       	cpi	r24, 0x01	; 1
    12de:	09 f4       	brne	.+2      	; 0x12e2 <ok_short+0x8e>
				comp_time();
    12e0:	04 db       	rcall	.-2552   	; 0x8ea <comp_time>
			menu = 31 + cursor_v_pos;
    12e2:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
    12e6:	81 5e       	subi	r24, 0xE1	; 225
    12e8:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
			apply_changes();
    12ec:	85 df       	rcall	.-246    	; 0x11f8 <apply_changes>
		break;
    12ee:	0e c0       	rjmp	.+28     	; 0x130c <ok_short+0xb8>
			menu = 2;
		break;
		case 31:
		case 32:
		case 33:
			menu = 3;
    12f0:	83 e0       	ldi	r24, 0x03	; 3
    12f2:	0a c0       	rjmp	.+20     	; 0x1308 <ok_short+0xb4>
		break;
		case 4:
			if (prev_menu == 1)
    12f4:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <prev_menu>
    12f8:	81 30       	cpi	r24, 0x01	; 1
    12fa:	09 f4       	brne	.+2      	; 0x12fe <ok_short+0xaa>
				upd_alarm_str();
    12fc:	04 db       	rcall	.-2552   	; 0x906 <upd_alarm_str>
			menu = 100 + cursor_v_pos;
    12fe:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <cursor_v_pos>
    1302:	8c 59       	subi	r24, 0x9C	; 156
    1304:	f1 cf       	rjmp	.-30     	; 0x12e8 <ok_short+0x94>
		case 148:
		case 149:
		case 240:
		case 241:
		case 242:
			menu = 4;
    1306:	84 e0       	ldi	r24, 0x04	; 4
    1308:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
		break;
	}
	prev_menu = menu;
    130c:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    1310:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <prev_menu>
    1314:	08 95       	ret

00001316 <ok_long>:
}
void ok_long(){
	switch(menu){
    1316:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <menu>
    131a:	84 30       	cpi	r24, 0x04	; 4
    131c:	51 f1       	breq	.+84     	; 0x1372 <ok_long+0x5c>
    131e:	40 f4       	brcc	.+16     	; 0x1330 <ok_long+0x1a>
    1320:	81 30       	cpi	r24, 0x01	; 1
    1322:	81 f1       	breq	.+96     	; 0x1384 <ok_long+0x6e>
    1324:	68 f0       	brcs	.+26     	; 0x1340 <ok_long+0x2a>
    1326:	82 30       	cpi	r24, 0x02	; 2
    1328:	79 f0       	breq	.+30     	; 0x1348 <ok_long+0x32>
    132a:	83 30       	cpi	r24, 0x03	; 3
    132c:	01 f1       	breq	.+64     	; 0x136e <ok_long+0x58>
    132e:	08 95       	ret
    1330:	85 31       	cpi	r24, 0x15	; 21
    1332:	58 f1       	brcs	.+86     	; 0x138a <ok_long+0x74>
    1334:	88 31       	cpi	r24, 0x18	; 24
    1336:	a8 f0       	brcs	.+42     	; 0x1362 <ok_long+0x4c>
    1338:	8f 51       	subi	r24, 0x1F	; 31
    133a:	83 30       	cpi	r24, 0x03	; 3
    133c:	a0 f0       	brcs	.+40     	; 0x1366 <ok_long+0x50>
    133e:	08 95       	ret
		case 0:
			menu = 1;
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
    1346:	06 c0       	rjmp	.+12     	; 0x1354 <ok_long+0x3e>
			lcd_res();
			show_menus();
			cursor_h(0);
		break;
		case 2:	
			ds3231_read_date();
    1348:	41 d8       	rcall	.-3966   	; 0x3cc <ds3231_read_date>
			menu = 1;
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
			cursor_v_pos = 0;
    1350:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <cursor_v_pos>
			shiftout(DATA, 0x00); // doesn't work without it - why?
    1354:	60 e0       	ldi	r22, 0x00	; 0
    1356:	80 e0       	ldi	r24, 0x00	; 0
    1358:	86 d6       	rcall	.+3340   	; 0x2066 <__TEXT_REGION_LENGTH__+0x66>
			lcd_res();
    135a:	aa d8       	rcall	.-3756   	; 0x4b0 <lcd_res>
			show_menus();
    135c:	99 dc       	rcall	.-1742   	; 0xc90 <show_menus>
			cursor_h(0);
    135e:	80 e0       	ldi	r24, 0x00	; 0
    1360:	89 cb       	rjmp	.-2286   	; 0xa74 <cursor_h>
		break;
		case 21:
		case 22:
		case 23:
			menu = 2;
    1362:	82 e0       	ldi	r24, 0x02	; 2
    1364:	01 c0       	rjmp	.+2      	; 0x1368 <ok_long+0x52>
		break;
		case 31:
		case 32:
		case 33:
			menu = 3;
    1366:	83 e0       	ldi	r24, 0x03	; 3
    1368:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
		break;
    136c:	08 95       	ret
		case 3:
			ds3231_read_time();
    136e:	d7 d7       	rcall	.+4014   	; 0x231e <__TEXT_REGION_LENGTH__+0x31e>
    1370:	ec cf       	rjmp	.-40     	; 0x134a <ok_long+0x34>
			lcd_res();
			show_menus();
			cursor_h(0);
		break;
		case 4:
			menu = 1;
    1372:	81 e0       	ldi	r24, 0x01	; 1
    1374:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <menu>
			shiftout(DATA, 0x00); // doesn't work without it - why?
    1378:	60 e0       	ldi	r22, 0x00	; 0
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	74 d6       	rcall	.+3304   	; 0x2066 <__TEXT_REGION_LENGTH__+0x66>
			cursor_v_pos = 0;
    137e:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <cursor_v_pos>
    1382:	eb cf       	rjmp	.-42     	; 0x135a <ok_long+0x44>
			lcd_res();
			show_menus();
			cursor_h(0);
		break;
		case 1:
			menu = 0;
    1384:	10 92 dd 00 	sts	0x00DD, r1	; 0x8000dd <menu>
			lcd_res();
    1388:	93 c8       	rjmp	.-3802   	; 0x4b0 <lcd_res>
    138a:	08 95       	ret

0000138c <ok_button>:
		break;
	}
}
void ok_button(){
    138c:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <state>
	if (!(PIND & 16)){
    1390:	84 99       	sbic	0x10, 4	; 16
    1392:	15 c0       	rjmp	.+42     	; 0x13be <ok_button+0x32>
		state |= 0x02;
    1394:	98 2f       	mov	r25, r24
    1396:	92 60       	ori	r25, 0x02	; 2
    1398:	90 93 de 00 	sts	0x00DE, r25	; 0x8000de <state>
		if (!(state & 0x01)){
    139c:	80 fd       	sbrc	r24, 0
    139e:	07 c0       	rjmp	.+14     	; 0x13ae <ok_button+0x22>
			bt_wait = WAIT;
    13a0:	9a e0       	ldi	r25, 0x0A	; 10
    13a2:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <bt_wait>
			state |= 0x01;
    13a6:	83 60       	ori	r24, 0x03	; 3
    13a8:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <state>
    13ac:	08 95       	ret
			} else 
				if (bt_wait > 0)
    13ae:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <bt_wait>
    13b2:	88 23       	and	r24, r24
    13b4:	79 f0       	breq	.+30     	; 0x13d4 <ok_button+0x48>
					bt_wait--;
    13b6:	81 50       	subi	r24, 0x01	; 1
    13b8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <bt_wait>
    13bc:	08 95       	ret
	} else {
		if (state & 0x02){
    13be:	81 ff       	sbrs	r24, 1
    13c0:	09 c0       	rjmp	.+18     	; 0x13d4 <ok_button+0x48>
			state &= ~0x03;
    13c2:	8c 7f       	andi	r24, 0xFC	; 252
    13c4:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <state>
			if (bt_wait > WAIT / 2)
    13c8:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <bt_wait>
    13cc:	86 30       	cpi	r24, 0x06	; 6
    13ce:	08 f0       	brcs	.+2      	; 0x13d2 <ok_button+0x46>
				ok_short();
    13d0:	41 cf       	rjmp	.-382    	; 0x1254 <ok_short>
			else
				ok_long();			
    13d2:	a1 cf       	rjmp	.-190    	; 0x1316 <ok_long>
    13d4:	08 95       	ret

000013d6 <__vector_9>:
		}
	}
}
uint8_t isr_count = 0;
/*So I discovered that I need something to do with more less freq that isr does*/
ISR(TIMER0_OVF_vect){
    13d6:	1f 92       	push	r1
    13d8:	0f 92       	push	r0
    13da:	0f b6       	in	r0, 0x3f	; 63
    13dc:	0f 92       	push	r0
    13de:	11 24       	eor	r1, r1
    13e0:	2f 93       	push	r18
    13e2:	3f 93       	push	r19
    13e4:	4f 93       	push	r20
    13e6:	5f 93       	push	r21
    13e8:	6f 93       	push	r22
    13ea:	7f 93       	push	r23
    13ec:	8f 93       	push	r24
    13ee:	9f 93       	push	r25
    13f0:	af 93       	push	r26
    13f2:	bf 93       	push	r27
    13f4:	cf 93       	push	r28
    13f6:	df 93       	push	r29
    13f8:	ef 93       	push	r30
    13fa:	ff 93       	push	r31
	//sleep_disable(); how it's even work?
	TCCR0 = 0x00;
    13fc:	13 be       	out	0x33, r1	; 51
	sei();
    13fe:	78 94       	sei
	//PORTB^=0x01;
	if (UART_FLAG){
    1400:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
    1404:	83 ff       	sbrs	r24, 3
    1406:	17 c0       	rjmp	.+46     	; 0x1436 <__vector_9+0x60>
		if(!i2c_send_arr(EEP_ADDR, addr, UART_arr, UART_pointer)){
    1408:	60 91 da 00 	lds	r22, 0x00DA	; 0x8000da <addr>
    140c:	70 91 db 00 	lds	r23, 0x00DB	; 0x8000db <addr+0x1>
    1410:	20 91 d9 00 	lds	r18, 0x00D9	; 0x8000d9 <UART_pointer>
    1414:	46 ea       	ldi	r20, 0xA6	; 166
    1416:	51 e0       	ldi	r21, 0x01	; 1
    1418:	84 e5       	ldi	r24, 0x54	; 84
    141a:	bb d6       	rcall	.+3446   	; 0x2192 <__TEXT_REGION_LENGTH__+0x192>
    141c:	81 11       	cpse	r24, r1
    141e:	04 c0       	rjmp	.+8      	; 0x1428 <__vector_9+0x52>
			UART_SendChar('O');
    1420:	8f e4       	ldi	r24, 0x4F	; 79
    1422:	1d d6       	rcall	.+3130   	; 0x205e <__TEXT_REGION_LENGTH__+0x5e>
			UART_SendChar('K');
    1424:	8b e4       	ldi	r24, 0x4B	; 75
    1426:	1b d6       	rcall	.+3126   	; 0x205e <__TEXT_REGION_LENGTH__+0x5e>
		}
		UART_FLAG_RESET;
    1428:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
    142c:	87 7f       	andi	r24, 0xF7	; 247
    142e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <status>
/*		UART_SendChar(addr >> 8);
		UART_SendChar(addr);
		for (uint8_t r = 0; r < UART_pointer; r++){
			UART_SendChar(i2c_read_byte(EEP_ADDR, addr + r));
		}*/
		UART_pointer = 0;
    1432:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <UART_pointer>
	}
	if (!(isr_count % 10)){
    1436:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__data_end>
    143a:	6a e0       	ldi	r22, 0x0A	; 10
    143c:	d1 d0       	rcall	.+418    	; 0x15e0 <__udivmodqi4>
    143e:	91 11       	cpse	r25, r1
    1440:	17 c0       	rjmp	.+46     	; 0x1470 <__vector_9+0x9a>
		uint8_t temp_min = time[1]; //I need it when I redraw time on main screen
    1442:	d0 91 ca 01 	lds	r29, 0x01CA	; 0x8001ca <time+0x1>
		uint8_t temp_h = time[0];
    1446:	c0 91 c9 01 	lds	r28, 0x01C9	; 0x8001c9 <time>
		ds3231_read_time(time);
    144a:	89 ec       	ldi	r24, 0xC9	; 201
    144c:	91 e0       	ldi	r25, 0x01	; 1
    144e:	67 d7       	rcall	.+3790   	; 0x231e <__TEXT_REGION_LENGTH__+0x31e>
		if (temp_min != time[1]){
    1450:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <time+0x1>
    1454:	d8 17       	cp	r29, r24
    1456:	29 f0       	breq	.+10     	; 0x1462 <__vector_9+0x8c>
			status |= 0x01;
    1458:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
    145c:	81 60       	ori	r24, 0x01	; 1
    145e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <status>
		}
		if (temp_h > time[0])
    1462:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <time>
    1466:	8c 17       	cp	r24, r28
    1468:	18 f4       	brcc	.+6      	; 0x1470 <__vector_9+0x9a>
			ds3231_read_date(date);
    146a:	80 ed       	ldi	r24, 0xD0	; 208
    146c:	91 e0       	ldi	r25, 0x01	; 1
    146e:	ae d7       	rcall	.+3932   	; 0x23cc <__TEXT_REGION_LENGTH__+0x3cc>
	}
	isr_count++;
    1470:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__data_end>
    1474:	8f 5f       	subi	r24, 0xFF	; 255
	if 	(isr_count == 0xFF)
    1476:	8f 3f       	cpi	r24, 0xFF	; 255
    1478:	19 f0       	breq	.+6      	; 0x1480 <__vector_9+0xaa>
			status |= 0x01;
		}
		if (temp_h > time[0])
			ds3231_read_date(date);
	}
	isr_count++;
    147a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__data_end>
    147e:	02 c0       	rjmp	.+4      	; 0x1484 <__vector_9+0xae>
	if 	(isr_count == 0xFF)
		isr_count = 0;
    1480:	10 92 d6 00 	sts	0x00D6, r1	; 0x8000d6 <__data_end>
	DDRD = 0xE0;
    1484:	80 ee       	ldi	r24, 0xE0	; 224
    1486:	81 bb       	out	0x11, r24	; 17
	ok_button();
    1488:	81 df       	rcall	.-254    	; 0x138c <ok_button>
	up_button();
    148a:	c6 dd       	rcall	.-1140   	; 0x1018 <up_button>
	dn_button();
    148c:	91 de       	rcall	.-734    	; 0x11b0 <dn_button>
	if (delay > 0 && !menu)
    148e:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <delay>
    1492:	90 91 dd 00 	lds	r25, 0x00DD	; 0x8000dd <menu>
    1496:	88 23       	and	r24, r24
    1498:	31 f0       	breq	.+12     	; 0x14a6 <__vector_9+0xd0>
    149a:	91 11       	cpse	r25, r1
    149c:	04 c0       	rjmp	.+8      	; 0x14a6 <__vector_9+0xd0>
		delay--;
    149e:	81 50       	subi	r24, 0x01	; 1
    14a0:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <delay>
    14a4:	06 c0       	rjmp	.+12     	; 0x14b2 <__vector_9+0xdc>
	else {
		if (!menu){
    14a6:	91 11       	cpse	r25, r1
    14a8:	04 c0       	rjmp	.+8      	; 0x14b2 <__vector_9+0xdc>
			shiftout(1, 0xAE);
    14aa:	6e ea       	ldi	r22, 0xAE	; 174
    14ac:	81 e0       	ldi	r24, 0x01	; 1
    14ae:	db d5       	rcall	.+2998   	; 0x2066 <__TEXT_REGION_LENGTH__+0x66>
			DDRD = 0x00;
    14b0:	11 ba       	out	0x11, r1	; 17
			}
	}
	TCCR0 = 0x04;
    14b2:	84 e0       	ldi	r24, 0x04	; 4
    14b4:	83 bf       	out	0x33, r24	; 51
}
    14b6:	ff 91       	pop	r31
    14b8:	ef 91       	pop	r30
    14ba:	df 91       	pop	r29
    14bc:	cf 91       	pop	r28
    14be:	bf 91       	pop	r27
    14c0:	af 91       	pop	r26
    14c2:	9f 91       	pop	r25
    14c4:	8f 91       	pop	r24
    14c6:	7f 91       	pop	r23
    14c8:	6f 91       	pop	r22
    14ca:	5f 91       	pop	r21
    14cc:	4f 91       	pop	r20
    14ce:	3f 91       	pop	r19
    14d0:	2f 91       	pop	r18
    14d2:	0f 90       	pop	r0
    14d4:	0f be       	out	0x3f, r0	; 63
    14d6:	0f 90       	pop	r0
    14d8:	1f 90       	pop	r1
    14da:	18 95       	reti

000014dc <__vector_11>:

ISR(USART_RXC_vect){
    14dc:	1f 92       	push	r1
    14de:	0f 92       	push	r0
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	0f 92       	push	r0
    14e4:	11 24       	eor	r1, r1
    14e6:	2f 93       	push	r18
    14e8:	3f 93       	push	r19
    14ea:	4f 93       	push	r20
    14ec:	5f 93       	push	r21
    14ee:	8f 93       	push	r24
    14f0:	9f 93       	push	r25
    14f2:	ef 93       	push	r30
    14f4:	ff 93       	push	r31
	sleep_disable();
    14f6:	85 b7       	in	r24, 0x35	; 53
    14f8:	8f 77       	andi	r24, 0x7F	; 127
    14fa:	85 bf       	out	0x35, r24	; 53
	uint8_t uartBuf = UDR;
    14fc:	8c b1       	in	r24, 0x0c	; 12
	switch (UART_cond){
    14fe:	90 91 dc 00 	lds	r25, 0x00DC	; 0x8000dc <UART_cond>
    1502:	91 30       	cpi	r25, 0x01	; 1
    1504:	19 f0       	breq	.+6      	; 0x150c <__vector_11+0x30>
    1506:	92 30       	cpi	r25, 0x02	; 2
    1508:	e9 f0       	breq	.+58     	; 0x1544 <__vector_11+0x68>
    150a:	33 c0       	rjmp	.+102    	; 0x1572 <__vector_11+0x96>
		case 1:
			addr |= uartBuf << shift;
    150c:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <shift>
    1510:	28 2f       	mov	r18, r24
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	09 2e       	mov	r0, r25
    1516:	02 c0       	rjmp	.+4      	; 0x151c <__vector_11+0x40>
    1518:	22 0f       	add	r18, r18
    151a:	33 1f       	adc	r19, r19
    151c:	0a 94       	dec	r0
    151e:	e2 f7       	brpl	.-8      	; 0x1518 <__vector_11+0x3c>
    1520:	40 91 da 00 	lds	r20, 0x00DA	; 0x8000da <addr>
    1524:	50 91 db 00 	lds	r21, 0x00DB	; 0x8000db <addr+0x1>
    1528:	24 2b       	or	r18, r20
    152a:	35 2b       	or	r19, r21
    152c:	30 93 db 00 	sts	0x00DB, r19	; 0x8000db <addr+0x1>
    1530:	20 93 da 00 	sts	0x00DA, r18	; 0x8000da <addr>
			shift -= 8;
    1534:	98 50       	subi	r25, 0x08	; 8
    1536:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <shift>
			if (shift){
    153a:	99 23       	and	r25, r25
    153c:	d1 f0       	breq	.+52     	; 0x1572 <__vector_11+0x96>
				UART_cond = 0;
    153e:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <UART_cond>
    1542:	17 c0       	rjmp	.+46     	; 0x1572 <__vector_11+0x96>
			}
			break;
		case 2:
			if (uartBuf == 0x03){ // End of text transmission
    1544:	83 30       	cpi	r24, 0x03	; 3
    1546:	59 f4       	brne	.+22     	; 0x155e <__vector_11+0x82>
				UART_cond = 0;
    1548:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <UART_cond>
				UART_FLAG_SET;
    154c:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <status>
    1550:	88 60       	ori	r24, 0x08	; 8
    1552:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <status>
				shift = 8;
    1556:	88 e0       	ldi	r24, 0x08	; 8
    1558:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <shift>
    155c:	10 c0       	rjmp	.+32     	; 0x157e <__vector_11+0xa2>
			} else {
				UART_arr[UART_pointer] = uartBuf;
    155e:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <UART_pointer>
    1562:	e9 2f       	mov	r30, r25
    1564:	f0 e0       	ldi	r31, 0x00	; 0
    1566:	ea 55       	subi	r30, 0x5A	; 90
    1568:	fe 4f       	sbci	r31, 0xFE	; 254
    156a:	80 83       	st	Z, r24
				UART_pointer++;
    156c:	9f 5f       	subi	r25, 0xFF	; 255
    156e:	90 93 d9 00 	sts	0x00D9, r25	; 0x8000d9 <UART_pointer>
			}
			break;
	}
	switch (uartBuf){
    1572:	81 30       	cpi	r24, 0x01	; 1
    1574:	11 f0       	breq	.+4      	; 0x157a <__vector_11+0x9e>
    1576:	82 30       	cpi	r24, 0x02	; 2
    1578:	11 f4       	brne	.+4      	; 0x157e <__vector_11+0xa2>
		case 0x02: UART_cond = 2; break;
		case 0x01: UART_cond = 1; break;
    157a:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <UART_cond>
		//default: UART_cond = 0;
	}
}
    157e:	ff 91       	pop	r31
    1580:	ef 91       	pop	r30
    1582:	9f 91       	pop	r25
    1584:	8f 91       	pop	r24
    1586:	5f 91       	pop	r21
    1588:	4f 91       	pop	r20
    158a:	3f 91       	pop	r19
    158c:	2f 91       	pop	r18
    158e:	0f 90       	pop	r0
    1590:	0f be       	out	0x3f, r0	; 63
    1592:	0f 90       	pop	r0
    1594:	1f 90       	pop	r1
    1596:	18 95       	reti

00001598 <main>:
int main(void)
{
	DDRD = 0xE0;
    1598:	80 ee       	ldi	r24, 0xE0	; 224
    159a:	81 bb       	out	0x11, r24	; 17
	PORTD = 0x00;
    159c:	12 ba       	out	0x12, r1	; 18
	//DDRB = 0x01;
	ACSR |= (1 << ACD);
    159e:	47 9a       	sbi	0x08, 7	; 8
	i2c_init();
    15a0:	77 d5       	rcall	.+2798   	; 0x2090 <__TEXT_REGION_LENGTH__+0x90>
	ds3231_init();
    15a2:	aa d6       	rcall	.+3412   	; 0x22f8 <__TEXT_REGION_LENGTH__+0x2f8>
	UART_Init();
    15a4:	cc db       	rcall	.-2152   	; 0xd3e <UART_Init>
	lcd_res();
    15a6:	84 d7       	rcall	.+3848   	; 0x24b0 <__TEXT_REGION_LENGTH__+0x4b0>
	i2c_send_byte(DS_ADDR, 0x0E, 0x04); //disables BBSQW
    15a8:	44 e0       	ldi	r20, 0x04	; 4
    15aa:	6e e0       	ldi	r22, 0x0E	; 14
    15ac:	70 e0       	ldi	r23, 0x00	; 0
    15ae:	88 e6       	ldi	r24, 0x68	; 104
    15b0:	be d5       	rcall	.+2940   	; 0x212e <__TEXT_REGION_LENGTH__+0x12e>
	i2c_send_byte(DS_ADDR, 0x0F, 0x00); //disables 32kHz output
    15b2:	40 e0       	ldi	r20, 0x00	; 0
    15b4:	6f e0       	ldi	r22, 0x0F	; 15
    15b6:	70 e0       	ldi	r23, 0x00	; 0
    15b8:	88 e6       	ldi	r24, 0x68	; 104
    15ba:	b9 d5       	rcall	.+2930   	; 0x212e <__TEXT_REGION_LENGTH__+0x12e>
	ds3231_read_time();
    15bc:	b0 d6       	rcall	.+3424   	; 0x231e <__TEXT_REGION_LENGTH__+0x31e>
	ds3231_read_date();
    15be:	06 d7       	rcall	.+3596   	; 0x23cc <__TEXT_REGION_LENGTH__+0x3cc>
	display_time();
    15c0:	0a da       	rcall	.-3052   	; 0x9d6 <display_time>
	display_date();
    15c2:	3a da       	rcall	.-2956   	; 0xa38 <display_date>
	TIMSK = 0x01;
    15c4:	81 e0       	ldi	r24, 0x01	; 1
    15c6:	89 bf       	out	0x39, r24	; 57
	TCCR0 = 0x04;
    15c8:	84 e0       	ldi	r24, 0x04	; 4
    15ca:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0x00;
    15cc:	12 be       	out	0x32, r1	; 50
	sei();
    15ce:	78 94       	sei
	set_sleep_mode(SLEEP_MODE_IDLE);
    15d0:	85 b7       	in	r24, 0x35	; 53
    15d2:	8f 78       	andi	r24, 0x8F	; 143
    15d4:	85 bf       	out	0x35, r24	; 53
	//ds3231_write_time(22, 8, 40);
	//ds3231_write_date(7, 16, 7, 17);
	while (1) {
		sleep_enable();
    15d6:	85 b7       	in	r24, 0x35	; 53
    15d8:	80 68       	ori	r24, 0x80	; 128
    15da:	85 bf       	out	0x35, r24	; 53
		sleep_cpu();
    15dc:	88 95       	sleep
	}
    15de:	fb cf       	rjmp	.-10     	; 0x15d6 <main+0x3e>

000015e0 <__udivmodqi4>:
    15e0:	99 1b       	sub	r25, r25
    15e2:	79 e0       	ldi	r23, 0x09	; 9
    15e4:	04 c0       	rjmp	.+8      	; 0x15ee <__udivmodqi4_ep>

000015e6 <__udivmodqi4_loop>:
    15e6:	99 1f       	adc	r25, r25
    15e8:	96 17       	cp	r25, r22
    15ea:	08 f0       	brcs	.+2      	; 0x15ee <__udivmodqi4_ep>
    15ec:	96 1b       	sub	r25, r22

000015ee <__udivmodqi4_ep>:
    15ee:	88 1f       	adc	r24, r24
    15f0:	7a 95       	dec	r23
    15f2:	c9 f7       	brne	.-14     	; 0x15e6 <__udivmodqi4_loop>
    15f4:	80 95       	com	r24
    15f6:	08 95       	ret

000015f8 <eeprom_read_byte>:
    15f8:	e1 99       	sbic	0x1c, 1	; 28
    15fa:	fe cf       	rjmp	.-4      	; 0x15f8 <eeprom_read_byte>
    15fc:	9f bb       	out	0x1f, r25	; 31
    15fe:	8e bb       	out	0x1e, r24	; 30
    1600:	e0 9a       	sbi	0x1c, 0	; 28
    1602:	99 27       	eor	r25, r25
    1604:	8d b3       	in	r24, 0x1d	; 29
    1606:	08 95       	ret

00001608 <_exit>:
    1608:	f8 94       	cli

0000160a <__stop_program>:
    160a:	ff cf       	rjmp	.-2      	; 0x160a <__stop_program>
